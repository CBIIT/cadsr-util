package gov.nih.nci.ncicb.cadsr.common.persistence.bc4j;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.RowIterator;
import oracle.jbo.AttributeList;
import oracle.jbo.server.TransactionEvent;
import oracle.jbo.domain.Date;
import oracle.jbo.Key;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class DesignationsImpl extends EntityImpl  {
  public static final int DESIGIDSEQ = 0;
  public static final int ACIDSEQ = 1;
  public static final int CONTEIDSEQ = 2;
  public static final int NAME = 3;
  public static final int DETLNAME = 4;
  public static final int DATECREATED = 5;
  public static final int CREATEDBY = 6;
  public static final int DATEMODIFIED = 7;
  public static final int MODIFIEDBY = 8;
  public static final int LAENAME = 9;
  public static final int ADMINISTEREDCOMPONENTS = 10;
  public static final int CONTEXTS = 11;










  private static EntityDefImpl mDefinitionObject;

  /**
   * 
   * This is the default constructor (do not remove)
   */
  public DesignationsImpl() {
  }

  /**
   * 
   *  Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("gov.nih.nci.ncicb.cadsr.common.persistence.bc4j.Designations");
    }
    return mDefinitionObject;
  }











  /**
   * 
   * Add attribute defaulting logic in this method.
   */
  protected void create(AttributeList attributeList) {
    super.create(attributeList);
  }

  /**
   * 
   * Add entity remove logic in this method.
   */
  public void remove() {
    super.remove();
  }

  /**
   * 
   * Add Entity validation code in this method.
   */
  protected void validateEntity() {
    super.validateEntity();
  }

  /**
   * 
   * Add locking logic here.
   */
  public void lock() {
    super.lock();
  }

  /**
   * 
   * Custom DML update/insert/delete logic here.
   */
  protected void doDML(int operation, TransactionEvent e) {
    super.doDML(operation, e);
  }

  /**
   * 
   * Gets the attribute value for DesigIdseq, using the alias name DesigIdseq
   */
  public String getDesigIdseq() {
    return (String)getAttributeInternal(DESIGIDSEQ);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DesigIdseq
   */
  public void setDesigIdseq(String value) {
    setAttributeInternal(DESIGIDSEQ, value);
  }

  /**
   * 
   * Gets the attribute value for AcIdseq, using the alias name AcIdseq
   */
  public String getAcIdseq() {
    return (String)getAttributeInternal(ACIDSEQ);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for AcIdseq
   */
  public void setAcIdseq(String value) {
    setAttributeInternal(ACIDSEQ, value);
  }

  /**
   * 
   * Gets the attribute value for ConteIdseq, using the alias name ConteIdseq
   */
  public String getConteIdseq() {
    return (String)getAttributeInternal(CONTEIDSEQ);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ConteIdseq
   */
  public void setConteIdseq(String value) {
    setAttributeInternal(CONTEIDSEQ, value);
  }

  /**
   * 
   * Gets the attribute value for Name, using the alias name Name
   */
  public String getName() {
    return (String)getAttributeInternal(NAME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Name
   */
  public void setName(String value) {
    setAttributeInternal(NAME, value);
  }

  /**
   * 
   * Gets the attribute value for DetlName, using the alias name DetlName
   */
  public String getDetlName() {
    return (String)getAttributeInternal(DETLNAME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DetlName
   */
  public void setDetlName(String value) {
    setAttributeInternal(DETLNAME, value);
  }

  /**
   * 
   * Gets the attribute value for DateCreated, using the alias name DateCreated
   */
  public Date getDateCreated() {
    return (Date)getAttributeInternal(DATECREATED);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DateCreated
   */
  public void setDateCreated(Date value) {
    setAttributeInternal(DATECREATED, value);
  }

  /**
   * 
   * Gets the attribute value for CreatedBy, using the alias name CreatedBy
   */
  public String getCreatedBy() {
    return (String)getAttributeInternal(CREATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreatedBy
   */
  public void setCreatedBy(String value) {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for DateModified, using the alias name DateModified
   */
  public Date getDateModified() {
    return (Date)getAttributeInternal(DATEMODIFIED);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DateModified
   */
  public void setDateModified(Date value) {
    setAttributeInternal(DATEMODIFIED, value);
  }

  /**
   * 
   * Gets the attribute value for ModifiedBy, using the alias name ModifiedBy
   */
  public String getModifiedBy() {
    return (String)getAttributeInternal(MODIFIEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ModifiedBy
   */
  public void setModifiedBy(String value) {
    setAttributeInternal(MODIFIEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for LaeName, using the alias name LaeName
   */
  public String getLaeName() {
    return (String)getAttributeInternal(LAENAME);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LaeName
   */
  public void setLaeName(String value) {
    setAttributeInternal(LAENAME, value);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
    switch (index)
      {
      case DESIGIDSEQ:
        return getDesigIdseq();
      case ACIDSEQ:
        return getAcIdseq();
      case CONTEIDSEQ:
        return getConteIdseq();
      case NAME:
        return getName();
      case DETLNAME:
        return getDetlName();
      case DATECREATED:
        return getDateCreated();
      case CREATEDBY:
        return getCreatedBy();
      case DATEMODIFIED:
        return getDateModified();
      case MODIFIEDBY:
        return getModifiedBy();
      case LAENAME:
        return getLaeName();
      case ADMINISTEREDCOMPONENTS:
        return getAdministeredComponents();
      case CONTEXTS:
        return getContexts();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
    switch (index)
      {
      case DESIGIDSEQ:
        setDesigIdseq((String)value);
        return;
      case ACIDSEQ:
        setAcIdseq((String)value);
        return;
      case CONTEIDSEQ:
        setConteIdseq((String)value);
        return;
      case NAME:
        setName((String)value);
        return;
      case DETLNAME:
        setDetlName((String)value);
        return;
      case DATECREATED:
        setDateCreated((Date)value);
        return;
      case CREATEDBY:
        setCreatedBy((String)value);
        return;
      case DATEMODIFIED:
        setDateModified((Date)value);
        return;
      case MODIFIEDBY:
        setModifiedBy((String)value);
        return;
      case LAENAME:
        setLaeName((String)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  /**
   * 
   * Gets the associated entity AdministeredComponentsImpl
   */
  public AdministeredComponentsImpl getAdministeredComponents() {
    return (AdministeredComponentsImpl)getAttributeInternal(ADMINISTEREDCOMPONENTS);
  }

  /**
   * 
   * Sets <code>value</code> as the associated entity AdministeredComponentsImpl
   */
  public void setAdministeredComponents(AdministeredComponentsImpl value) {
    setAttributeInternal(ADMINISTEREDCOMPONENTS, value);
  }

  /**
   * 
   * Gets the associated entity ContextsImpl
   */
  public ContextsImpl getContexts() {
    return (ContextsImpl)getAttributeInternal(CONTEXTS);
  }

  /**
   * 
   * Sets <code>value</code> as the associated entity ContextsImpl
   */
  public void setContexts(ContextsImpl value) {
    setAttributeInternal(CONTEXTS, value);
  }

  /**
   * 
   *  Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(String desigIdseq)
  {
    return new Key(new Object[] {desigIdseq});
  }











}