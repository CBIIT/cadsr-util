package gov.nih.nci.ncicb.cadsr.common.persistence.bc4j;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.Key;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ValueMeaningsLovImpl extends EntityImpl 
{
  public static final int SHORTMEANING = 0;
  public static final int DESCRIPTION = 1;
  public static final int COMMENTS = 2;
  public static final int BEGINDATE = 3;
  public static final int ENDDATE = 4;
  public static final int DATECREATED = 5;
  public static final int CREATEDBY = 6;
  public static final int DATEMODIFIED = 7;
  public static final int MODIFIEDBY = 8;
  public static final int CONDRIDSEQ = 9;
  public static final int CONDERIVATIONRULESEXT = 10;
  public static final int PERMISSIBLEVALUES = 11;







  private static EntityDefImpl mDefinitionObject;

  /**
   * 
   * This is the default constructor (do not remove)
   */
  public ValueMeaningsLovImpl()
  {
  }

  /**
   * 
   *  Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("gov.nih.nci.ncicb.cadsr.common.persistence.bc4j.ValueMeaningsLov");
    }
    return mDefinitionObject;
  }








  /**
   * 
   * Gets the attribute value for ShortMeaning, using the alias name ShortMeaning
   */
  public String getShortMeaning()
  {
    return (String)getAttributeInternal(SHORTMEANING);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ShortMeaning
   */
  public void setShortMeaning(String value)
  {
    setAttributeInternal(SHORTMEANING, value);
  }

  /**
   * 
   * Gets the attribute value for Description, using the alias name Description
   */
  public String getDescription()
  {
    return (String)getAttributeInternal(DESCRIPTION);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Description
   */
  public void setDescription(String value)
  {
    setAttributeInternal(DESCRIPTION, value);
  }

  /**
   * 
   * Gets the attribute value for Comments, using the alias name Comments
   */
  public String getComments()
  {
    return (String)getAttributeInternal(COMMENTS);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Comments
   */
  public void setComments(String value)
  {
    setAttributeInternal(COMMENTS, value);
  }

  /**
   * 
   * Gets the attribute value for BeginDate, using the alias name BeginDate
   */
  public Date getBeginDate()
  {
    return (Date)getAttributeInternal(BEGINDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for BeginDate
   */
  public void setBeginDate(Date value)
  {
    setAttributeInternal(BEGINDATE, value);
  }

  /**
   * 
   * Gets the attribute value for EndDate, using the alias name EndDate
   */
  public Date getEndDate()
  {
    return (Date)getAttributeInternal(ENDDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EndDate
   */
  public void setEndDate(Date value)
  {
    setAttributeInternal(ENDDATE, value);
  }

  /**
   * 
   * Gets the attribute value for DateCreated, using the alias name DateCreated
   */
  public Date getDateCreated()
  {
    return (Date)getAttributeInternal(DATECREATED);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DateCreated
   */
  public void setDateCreated(Date value)
  {
    setAttributeInternal(DATECREATED, value);
  }

  /**
   * 
   * Gets the attribute value for CreatedBy, using the alias name CreatedBy
   */
  public String getCreatedBy()
  {
    return (String)getAttributeInternal(CREATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreatedBy
   */
  public void setCreatedBy(String value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for DateModified, using the alias name DateModified
   */
  public Date getDateModified()
  {
    return (Date)getAttributeInternal(DATEMODIFIED);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DateModified
   */
  public void setDateModified(Date value)
  {
    setAttributeInternal(DATEMODIFIED, value);
  }

  /**
   * 
   * Gets the attribute value for ModifiedBy, using the alias name ModifiedBy
   */
  public String getModifiedBy()
  {
    return (String)getAttributeInternal(MODIFIEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ModifiedBy
   */
  public void setModifiedBy(String value)
  {
    setAttributeInternal(MODIFIEDBY, value);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case SHORTMEANING:
        return getShortMeaning();
      case DESCRIPTION:
        return getDescription();
      case COMMENTS:
        return getComments();
      case BEGINDATE:
        return getBeginDate();
      case ENDDATE:
        return getEndDate();
      case DATECREATED:
        return getDateCreated();
      case CREATEDBY:
        return getCreatedBy();
      case DATEMODIFIED:
        return getDateModified();
      case MODIFIEDBY:
        return getModifiedBy();
      case CONDRIDSEQ:
        return getCondrIdseq();
      case PERMISSIBLEVALUES:
        return getPermissibleValues();
      case CONDERIVATIONRULESEXT:
        return getConDerivationRulesExt();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case SHORTMEANING:
        setShortMeaning((String)value);
        return;
      case DESCRIPTION:
        setDescription((String)value);
        return;
      case COMMENTS:
        setComments((String)value);
        return;
      case BEGINDATE:
        setBeginDate((Date)value);
        return;
      case ENDDATE:
        setEndDate((Date)value);
        return;
      case DATECREATED:
        setDateCreated((Date)value);
        return;
      case CREATEDBY:
        setCreatedBy((String)value);
        return;
      case DATEMODIFIED:
        setDateModified((Date)value);
        return;
      case MODIFIEDBY:
        setModifiedBy((String)value);
        return;
      case CONDRIDSEQ:
        setCondrIdseq((String)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }



  /**
   * 
   * Gets the associated entity oracle.jbo.RowIterator
   */
  public RowIterator getPermissibleValues()
  {
    return (RowIterator)getAttributeInternal(PERMISSIBLEVALUES);
  }


  /**
   * 
   *  Gets the attribute value for CondrIdseq, using the alias name CondrIdseq
   */
  public String getCondrIdseq()
  {
    return (String)getAttributeInternal(CONDRIDSEQ);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for CondrIdseq
   */
  public void setCondrIdseq(String value)
  {
    setAttributeInternal(CONDRIDSEQ, value);
  }


  /**
   * 
   *  Gets the associated entity ConDerivationRulesExtImpl
   */
  public ConDerivationRulesExtImpl getConDerivationRulesExt()
  {
    return (ConDerivationRulesExtImpl)getAttributeInternal(CONDERIVATIONRULESEXT);
  }

  /**
   * 
   *  Sets <code>value</code> as the associated entity ConDerivationRulesExtImpl
   */
  public void setConDerivationRulesExt(ConDerivationRulesExtImpl value)
  {
    setAttributeInternal(CONDERIVATIONRULESEXT, value);
  }

  /**
   * 
   *  Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(String shortMeaning)
  {
    return new Key(new Object[] {shortMeaning});
  }





}