package gov.nih.nci.ncicb.cadsr.common.persistence.bc4j;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Number;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ClassificationsViewRowImpl extends ViewRowImpl
{


  public static final int ACIDSEQ = 0;
  public static final int ACTLNAME = 1;
  public static final int VERSION = 2;
  public static final int CONTEIDSEQ = 3;
  public static final int CSIIDSEQ = 4;
  public static final int CSINAME = 5;
  public static final int CSITLNAME = 6;
  public static final int CSIDSEQ = 7;
  public static final int PREFERREDNAME = 8;
  public static final int PREFERREDDEFINITION = 9;
  public static final int CSID = 10;
  public static final int CSVERSION = 11;
  public static final int LONGNAME = 12;
  /**
   *
   * This is the default constructor (do not remove)
   */
  public ClassificationsViewRowImpl()
  {
  }

  /**
   *
   * Gets AcCsi entity object.
   */
  public AcCsiImpl getAcCsi()
  {
    return (AcCsiImpl)getEntity(0);
  }

  /**
   *
   * Gets AdministeredComponents entity object.
   */
  public AdministeredComponentsImpl getAdministeredComponents()
  {
    return (AdministeredComponentsImpl)getEntity(1);
  }

  /**
   *
   * Gets ClassificationSchemes entity object.
   */
  public ClassificationSchemesImpl getClassificationSchemes()
  {
    return (ClassificationSchemesImpl)getEntity(2);
  }

  /**
   *
   * Gets ClassSchemeItems entity object.
   */
  public ClassSchemeItemsImpl getClassSchemeItems()
  {
    return (ClassSchemeItemsImpl)getEntity(3);
  }

  /**
   *
   * Gets CsCsi entity object.
   */
  public CsCsiImpl getCsCsi()
  {
    return (CsCsiImpl)getEntity(4);
  }

  /**
   *
   * Gets the attribute value for AC_IDSEQ using the alias name AcIdseq
   */
  public String getAcIdseq()
  {
    return (String)getAttributeInternal(ACIDSEQ);
  }







  /**
   *
   * Gets the attribute value for CSI_NAME using the alias name CsiName
   */
  public String getCsiName()
  {
    return (String)getAttributeInternal(CSINAME);
  }

  /**
   *
   * Gets the attribute value for CSITL_NAME using the alias name CsitlName
   */
  public String getCsitlName()
  {
    return (String)getAttributeInternal(CSITLNAME);
  }



  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case ACIDSEQ:
        return getAcIdseq();
      case ACTLNAME:
        return getActlName();
      case VERSION:
        return getVersion();
      case CONTEIDSEQ:
        return getConteIdseq();
      case CSIIDSEQ:
        return getCsiIdseq();
      case CSINAME:
        return getCsiName();
      case CSITLNAME:
        return getCsitlName();
      case CSIDSEQ:
        return getCsIdseq();
      case PREFERREDNAME:
        return getPreferredName();
      case PREFERREDDEFINITION:
        return getPreferredDefinition();
      case CSID:
        return getCsId();
      case CSVERSION:
        return getCsVersion();
      case LONGNAME:
        return getLongName();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case CSID:
        setCsId((Number)value);
        return;
      case CSVERSION:
        setCsVersion((Number)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  /**
   *
   * Gets the attribute value for ACTL_NAME using the alias name ActlName
   */
  public String getActlName()
  {
    return (String)getAttributeInternal(ACTLNAME);
  }

  /**
   *
   * Gets the attribute value for VERSION using the alias name Version
   */
  public Number getVersion()
  {
    return (Number)getAttributeInternal(VERSION);
  }

  /**
   *
   * Gets the attribute value for CONTE_IDSEQ using the alias name ConteIdseq
   */
  public String getConteIdseq()
  {
    return (String)getAttributeInternal(CONTEIDSEQ);
  }

  /**
   *
   * Gets the attribute value for CSI_IDSEQ using the alias name CsiIdseq
   */
  public String getCsiIdseq()
  {
    return (String)getAttributeInternal(CSIIDSEQ);
  }

  /**
   *
   * Gets the attribute value for CS_IDSEQ using the alias name CsIdseq
   */
  public String getCsIdseq()
  {
    return (String)getAttributeInternal(CSIDSEQ);
  }

  /**
   *
   * Gets the attribute value for PREFERRED_NAME using the alias name PreferredName
   */
  public String getPreferredName()
  {
    return (String)getAttributeInternal(PREFERREDNAME);
  }

  /**
   *
   * Gets the attribute value for PREFERRED_DEFINITION using the alias name PreferredDefinition
   */
  public String getPreferredDefinition()
  {
    return (String)getAttributeInternal(PREFERREDDEFINITION);
  }

  /**
   *
   *  Gets the attribute value for CS_ID using the alias name CsId
   */
  public Number getCsId()
  {
    return (Number)getAttributeInternal(CSID);
  }

  /**
   *
   *  Sets <code>value</code> as attribute value for CS_ID using the alias name CsId
   */
  public void setCsId(Number value)
  {
    setAttributeInternal(CSID, value);
  }



    /**Gets the attribute value for the calculated attribute CsVersion
     */
    public Number getCsVersion() {
        return (Number) getAttributeInternal(CSVERSION);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute CsVersion
     */
    public void setCsVersion(Number value) {
        setAttributeInternal(CSVERSION, value);
    }

   /**
    *
    * Gets the attribute value for LONG_NAME using the alias name longName
    */
   public String getLongName()
   {
     return (String)getAttributeInternal(LONGNAME);
   }











}