<!DOCTYPE project>
<!--
  CDEBrowser Ant build 
  =============================================

  Author: Shaji Kakkodi
  

  This build script was created using Ant version 1.6 and Java 1.4.2_06
-->

<project name="formbuilder" default="init" basedir=".">
  
  <!-- Project Settings -->
  <!-- Use your own build.properties 
       Properties in build.properties overide properties in build.xml
       -->
  <property file="build.properties"/>
  
   <!-- Make sure these are correct for your instance C:\jboss-4.0.4.GA-->
   
   <property name="jboss.home" value="D:\jboss-4.0.2" />   <!--"C:\jboss-4.0.4.GA\" />   -->   
   <property name="jboss.start.script.name" value="run.bat" />
   <property name="jboss.start.debug.script.name" value="rundebug.bat" />
   <property name="jboss.stop.script.name" value="shutdown.bat" />
   <property name="jboss.deploy" value="${jboss.home}/server/default/deploy" />
   
   <property name="cdebrowser.version" value="3.2.0.2" />
   <property name="cdebrowser.build" value="5" />
   
   <!-- used for open source build for file suffix-->
   <property name="cdebrowser.version.suffix" value="3_2_0_2" />
   
   <property name="dev.user.password" value="cdeuser" />
   <property name="qa.user.password" value="cdeuser" />
   <property name="stage.user.password" value="cdeuser" />
   <property name="umlstage.user.password" value="cdeuser" />
   <property name="prod.user.password" value="cdeuser" />
   <property name="load.user.password" value="cdeuser" />
   <property name="opensource.user.password" value="user_passwd" />
   

   
   
   <!-- cadsr api  -->
  <property name="cadsrapi.home" value="D:/projects/NCI3/cadsrapi" /> 
  <property name="cadsrapi.location.build" value="${cadsrapi.home}" /> 
  <property name="cadsrapi.buildfile.name" value="build.xml" /> 
  <property name="cadsrapi.lib.name" value="cadsr-api.jar" />
  <property name="cadsrapi.dist.dir" value="dist" />
  
  
  
  <property name="project.home" value="${basedir}/../.."/>
  
  <property name="app.name" value="cdebrowser" />
  <property name="web.app.name" value="${app.name}-web" />
  <property name="ear.name" value="${app.name}" />
  <property name="war.name" value="${app.name}-web" />
  <property name="ejb.name" value="formbuilder-ejb" />  
    
  <!-- Java Source Directories -->
  <property name="java.src.dir" value="${project.home}/src/java"/>
    
  <!-- ui Directories -->
  <property name="ui.dir" value="${project.home}/ui"/>  
  <property name="jsp.dir" value="${ui.dir}/jsp"/>  
  <property name="html.dir" value="${ui.dir}/html"/>   
  <property name="formbuilder.jsp.dir" value="${jsp.dir}/formbuilder"/>  
  <property name="build.dir" value="${project.home}/build"/>
  <property name="dist.dir" value="${project.home}/dist"/>
  <property name="classes.build.dir" value="${build.dir}/classes"/>
  <property name="java.lib.dir" value="${project.home}/lib/java"/>
 
  <property name="config.home" value="${project.home}/config"/>
  <property name="config.qa" value="${project.home}/config_qa"/>
  <property name="config.stage" value="${project.home}/config_stage"/>  
  <property name="config.umlstage" value="${project.home}/config_umlstg"/>  
  <property name="config.prod" value="${project.home}/config_prod"/>
  <property name="config.load" value="${project.home}/config_load"/>
  <property name="config.opensource" value="${project.home}/config_opensource"/>
  <property name="ejb.descriptor.home" value="${project.home}/config/ejb"/>
  
  <property name="web.descriptor.home" value="${project.home}/config/WEB-INF/jboss"/>  
  
  <property name="app.docs.dir" value="${project.home}/docs" /> 
  
  <property name="cdebrowser.docs.setup.dir" value="${project.home}/docs/setup" />  
  
  <property name="build.docs.setup.dir" value="${build.dir}/docs" />  
  
  <property name="app.setup.jboss.install.name" value="Install_CDBrowser_on_JBOSS" />
  <property name="app.setup.jboss.oracle.datasource.filename" value="oracle-ds.xml" />

  
   <!-- Open Source file names This need to updated by release-->
  <property name="app.setup.jboss.install.out.name" value="Install_CDBrowser_${cdebrowser.version.suffix}_on_Jboss.txt" />  
  <property name="download.file.name.unix" value="CDEBrowser_Unix_${cdebrowser.version.suffix}" />
  <property name="download.file.name.windows" value="CDEBrowser_Windows_${cdebrowser.version.suffix}" />
  <property name="open.source.file.name.windows" value="CDEBrowser_Windows_src_${cdebrowser.version.suffix}" />
  <property name="open.source.file.name.unix" value="CDEBrowser_Unix_src_${cdebrowser.version.suffix}" />  
  
  
    <!-- Open source directoris -->
  <property name="open.source.dir" value="${build.dir}/opensource" />  
  <property name="open.source.dir.raw" value="${open.source.dir}/raw" />
  <property name="open.source.dir.raw.config" value="${open.source.dir.raw}/config" />
  <property name="open.source.dir.raw.lib" value="${open.source.dir.raw}/lib/java" />
  <property name="open.source.dir.raw.src" value="${open.source.dir.raw}/src/java" />
  <property name="open.source.dir.raw.ui" value="${open.source.dir.raw}/ui" />
  <property name="app.docs.setup.distribution.readme.name" value="CDEBrowserDistributionReadme" /> 
  <property name="app.docs.setup.distribution.src.readme.name" value="CDEBrowserSrcDistributionReadme" /> 
  <property name="open.source.readme.name" value="source_readme" /> 
  
  <!-- base dir in the zip file -->
  <property name="open.source.dir.base.name" value="cdebrowser_${cdebrowser.version.suffix}" />    
  

  <!-- =========== CLEAN BUILD AREA ======================= -->
    
    <target name="clean">
          <delete dir="${classes.build.dir}" quiet="false"/>
          <delete dir="${build.dir}" quiet="false"/>   
          <delete dir="${dist.dir}" quiet="false"/>          
    </target>
    
    <target name="clean_build_dir">
          <delete dir="${classes.build.dir}" quiet="false"/>
          <delete dir="${build.dir}" quiet="false"/>           
    </target>
 <!-- =========== END CLEAN BUILD AREA ======================= -->
 
 
 <!-- =========== CONFIGURATION ======================= -->
   <!-- Initialize the system -->
   
 
   <target name="init">
     <!-- Create build dir -->
     <!-- Create time stamp -->
     <tstamp/>
     <mkdir dir="${build.dir}"/>
     <mkdir dir="${classes.build.dir}"/>
     <mkdir dir="${dist.dir}"/>
   </target>
   <!-- end init -->
 <!-- =========== END CONFIGURATION ======================= -->


   <!--Set the lib classpath-->
   <!--Set the lib classpath-->
   <path id="classpath">
    <fileset dir="${java.lib.dir}">
      <include name="*.jar"/>
      <include name="*.zip"/>
    </fileset>
  
   </path>
   
   <path id="srcpath">
         <pathelement location="${java.src.dir}"/>
   </path>
   
   <target name="compile" depends="init">
      <javac destdir="${classes.build.dir}" debug="on" >
         <classpath refid="classpath"/>
         <src refid="srcpath"/>
      </javac>  
   </target>
   

  <!-- ============ CREATE FORM PERSISTENCE JAR FILE ================== -->
    <target name="jar_persistence_form" depends="compile">
        <jar jarfile="${classes.build.dir}/persistence_form.jar">
          <fileset dir="${classes.build.dir}">
            <patternset>
              <include name="gov/nih/nci/ncicb/cadsr/common/persistence/base/**"/> 
              <include name="gov/nih/nci/ncicb/cadsr/common/persistence/dao/**"/> 
              <include name="gov/nih/nci/ncicb/cadsr/common/persistence/jdbc/**"/> 
            </patternset>
          </fileset>
          <manifest>
	    <attribute name="Built-By" value="${user.name}"/>
	    <attribute name="Class-Path" value="classes12.jar spring-1.2.4.jar spring-jdbc-1.2.4.jar"/>
          </manifest>           
        </jar>
      </target>
  <!-- =========== END FORM PERSISTENCE JAR PROCESS ======================= -->
  
  <!-- ============ CREATE COMMON JAR FILE ================== -->
    <target name="jar_common" depends="compile">
        <jar jarfile="${classes.build.dir}/common.jar">
          <fileset dir="${classes.build.dir}">
            <patternset>
              <include name="gov/nih/nci/ncicb/cadsr/common/resource/*"/>
              <include name="gov/nih/nci/ncicb/cadsr/common/resource/impl/*"/>              
              <include name="gov/nih/nci/ncicb/cadsr/common/cdecart/**"/>
              <include name="gov/nih/nci/ncicb/cadsr/common/dto/*"/>
              <include name="gov/nih/nci/ncicb/cadsr/common/dto/base/*"/>
              <include name="gov/nih/nci/ncicb/cadsr/common/dto/jdbc/*"/>
              <include name="gov/nih/nci/ncicb/cadsr/common/exception/**"/>
              <include name="gov/nih/nci/ncicb/cadsr/common/servicelocator/**"/>
              <include name="gov/nih/nci/ncicb/cadsr/common/util/StringUtils.class"/>
              <include name="gov/nih/nci/ncicb/cadsr/common/util/logging/LogFactory.class"/>
              <include name="gov/nih/nci/ncicb/cadsr/common/util/logging/Log.class"/>
              <include name="gov/nih/nci/ncicb/cadsr/common/util/logging/CaDSRLogImpl.class"/>
              <include name="gov/nih/nci/ncicb/cadsr/common/util/SessionUtils.class"/>
              <include name="gov/nih/nci/ncicb/cadsr/common/util/DebugStringBuffer.class"/>
              <include name="gov/nih/nci/ncicb/cadsr/common/util/TimeUtils.class"/>
              <include name="gov/nih/nci/ncicb/cadsr/common/util/ObjectFactory.class"/>
              <include name="gov/nih/nci/ncicb/cadsr/*"/>
              <include name="gov/nih/nci/ncicb/cadsr/common/persistence/PersistenceConstants.class"/>
              <include name="gov/nih/nci/ncicb/cadsr/common/persistence/ErrorCodeConstants.class"/>
              <exclude name="gov/nih/nci/ncicb/cadsr/common/servicelocator/ApplicationServiceLocator.class"/>
              <exclude name="gov/nih/nci/ncicb/cadsr/common/servicelocator/ObjectLocator.class"/>
              <exclude name="gov/nih/nci/ncicb/cadsr/common/servicelocator/spring/*"/>              
            </patternset>
          </fileset>           
        </jar>
      </target>
  <!-- =========== END COMMON JAR PROCESS ======================= -->
  
  
  <!-- =========== DEV CONFIG ======================= -->
    <target name="dev_config" depends="init">          
     <copy todir="${classes.build.dir}/WEB-INF/classes">
         <fileset dir="${config.home}/properties">
           <patternset>
             <include name="*.properties"/>
             <exclude name="log4j.properties"/>
             <exclude name="cdebrowser.properties"/>
           </patternset>
         </fileset>
       </copy>
     
     <filter token="cdebrowser.version" value="${cdebrowser.version}"/>
     <filter token="cdebrowser.build" value="${cdebrowser.build}" />
     <copy todir="${classes.build.dir}/jsp/common" filtering="true">
              <fileset dir="${jsp.dir}/common">
                <patternset>
                  <include name="common_variable_length_bottom_border.jsp"/>
                  <include name="common_bottom_border.jsp"/>
                </patternset>
              </fileset>
     </copy>     
   
     <filter token="user.password" value="${dev.user.password}"/>
     <copy todir="${classes.build.dir}/WEB-INF/classes" filtering="true">    
         <fileset dir="${config.home}/connections">
           <patternset>
             <include name="cle-providers.xml"/>
           </patternset>
         </fileset>
      </copy>
        
     <copy todir="${classes.build.dir}/WEB-INF/classes">      
         <fileset dir="${config.home}/services">
           <patternset>
             <include name="cdeBrowser.xml"/>
           </patternset>
         </fileset>      
      </copy>  

       <copy todir="${classes.build.dir}/META-INF" overwrite="Yes">      
           <fileset dir="${config.home}/META-INF">
             <patternset>
               <include name="application.xml"/>
               <!--include name="jboss-app.xml"/-->
             </patternset>
           </fileset>      
        </copy> 
        
       <property name="debug.config.home" value="${config.home}" /> 
        
   </target>
  <!-- =========== END DEV CONFIG ======================= -->
  
  <target name="debug_setting" depends="debug_copy,debug_remove">
 
  </target>
  <target name="debug_copy" if="set_debug">
    
     <copy todir="${classes.build.dir}/WEB-INF/classes">
                  <fileset dir="${debug.config.home}/properties">
                    <patternset>
                      <include name="cdebrowser.properties"/>
                    </patternset>
                  </fileset>
       </copy>  
  </target>
  
  <target name="debug_remove" unless="set_debug" >
     <delete quiet="true" failonerror="false">
                  <fileset dir="${classes.build.dir}/WEB-INF/classes/properties" includes = "cdebrowser.properties">
                  </fileset>
       </delete>  
  </target>

  
  <!-- =========== TEST CONFIG ======================= -->
    <target name="qa_config" depends="init,dev_config">    
       <copy todir="${classes.build.dir}/META-INF" overwrite="Yes">      
           <fileset dir="${config.qa}/META-INF">
             <patternset>
               <include name="application.xml"/>
             </patternset>
           </fileset>      
        </copy> 
     <filter token="user.password" value="${qa.user.password}"/>
     <copy todir="${classes.build.dir}/WEB-INF/classes" overwrite="Yes" filtering="true">    
         <fileset dir="${config.qa}/connections">
           <patternset>
             <include name="cle-providers.xml"/>
           </patternset>
         </fileset>
      </copy>     
      
      <property name="debug.config.home" value="${config.qa}" /> 
     
    </target>
  <!-- =========== END TEST CONFIG ======================= -->
  
  <!-- =========== Stage CONFIG ======================= -->
    <target name="stage_config" depends="init,dev_config">    
       <copy todir="${classes.build.dir}/META-INF" overwrite="Yes">      
           <fileset dir="${config.stage}/META-INF">
             <patternset>
               <include name="application.xml"/>
             </patternset>
           </fileset>      
        </copy> 
     <filter token="user.password" value="${stage.user.password}"/>
     <copy todir="${classes.build.dir}/WEB-INF/classes" overwrite="Yes" filtering="true">    
         <fileset dir="${config.stage}/connections">
           <patternset>
             <include name="cle-providers.xml"/>
           </patternset>
         </fileset>
      </copy>     
      
      <property name="debug.config.home" value="${config.stage}" /> 
          
    </target>
  <!-- =========== END TEST CONFIG ======================= -->  

 <!-- =========== UML Stage CONFIG ======================= -->
    <target name="umlstage_config" depends="init,dev_config">    
       <copy todir="${classes.build.dir}/META-INF" overwrite="Yes">      
           <fileset dir="${config.umlstage}/META-INF">
             <patternset>
               <include name="application.xml"/>
             </patternset>
           </fileset>      
        </copy> 
     <filter token="user.password" value="${umlstage.user.password}"/>
     <copy todir="${classes.build.dir}/WEB-INF/classes" overwrite="Yes" filtering="true">    
         <fileset dir="${config.umlstage}/connections">
           <patternset>
             <include name="cle-providers.xml"/>
           </patternset>
         </fileset>
      </copy>     
      
      <property name="debug.config.home" value="${config.umlstage}" /> 
          
    </target>
  <!-- =========== END UML Stage CONFIG ======================= -->  
  <!-- =========== Load CONFIG ======================= -->
    <target name="load_config" depends="init,dev_config">    
       <copy todir="${classes.build.dir}/META-INF" overwrite="Yes">      
           <fileset dir="${config.load}/META-INF">
             <patternset>
               <include name="application.xml"/>
             </patternset>
           </fileset>      
        </copy> 
     <filter token="user.password" value="${load.user.password}"/>
     <copy todir="${classes.build.dir}/WEB-INF/classes" overwrite="Yes" filtering="true">    
         <fileset dir="${config.load}/connections">
           <patternset>
             <include name="cle-providers.xml"/>
           </patternset>
         </fileset>
      </copy>     
      
      <property name="debug.config.home" value="${config.load}" /> 
          
    </target>

  <!-- =========== END Load CONFIG ======================= -->  
  
  <!-- =========== PROD CONFIG ======================= -->
    <target name="prod_config" depends="init,dev_config">    
       <copy todir="${classes.build.dir}/META-INF" overwrite="Yes">      
           <fileset dir="${config.prod}/META-INF">
             <patternset>
               <include name="application.xml"/>
             </patternset>
           </fileset>      
        </copy>
     <filter token="user.password" value="${prod.user.password}"/>
     <copy todir="${classes.build.dir}/WEB-INF/classes" overwrite="Yes" filtering="true">    
         <fileset dir="${config.prod}/connections">
           <patternset>
             <include name="cle-providers.xml"/>
           </patternset>
         </fileset>
      </copy>   
      
      <property name="debug.config.home" value="${config.prod}" /> 
           
    </target>
  <!-- =========== END PROD CONFIG ======================= -->  
  
    <!-- =========== Opensource CONFIG ======================= -->
    
    <target name="opensource_config" depends="init,dev_config"> 
    
       <copy todir="${classes.build.dir}/META-INF" overwrite="Yes">      
           <fileset dir="${config.qa}/META-INF">
             <patternset>
               <include name="application.xml"/>
             </patternset>
           </fileset>      
        </copy> 
        
    <filter token="user.password" value="${opensource.user.password}"/>
     <copy todir="${classes.build.dir}/WEB-INF/classes" overwrite="Yes" filtering="true">    
         <fileset dir="${config.opensource}/connections">
           <patternset>
             <include name="cle-providers.xml"/>
           </patternset>
         </fileset>
      </copy>   
 
       
    </target>
  <!-- =========== END OpenSource CONFIG ======================= -->  
  

  <!-- =========== START WAR PROCESS ======================= -->
  
   <target name="war_cdebrowser" depends="compile">  

     <copy todir="${classes.build.dir}/WEB-INF/classes">      
         <fileset dir="${java.src.dir}">
           <patternset>
             <include name="gov/nih/nci/ncicb/cadsr/formbuilder/struts/common/*.properties"/>
           </patternset>
         </fileset>      
      </copy>
     <copy todir="${classes.build.dir}/WEB-INF/classes">      
         <fileset dir="${java.src.dir}">
           <patternset>
             <include name="gov/nih/nci/ncicb/cadsr/common/persistence/**/*.xml"/>
           </patternset>
         </fileset>      
      </copy>    
      
      <!-- copy application classes -->
      <copy todir="${classes.build.dir}/WEB-INF/classes">
        <fileset dir="${classes.build.dir}">
           <patternset>
           
              <!-- commons -->

	
	    <!-- persistence -->
              <include name="gov/nih/nci/ncicb/cadsr/common/persistence/base/**"/> 
              <include name="gov/nih/nci/ncicb/cadsr/common/persistence/dao/**"/> 
              <include name="gov/nih/nci/ncicb/cadsr/common/persistence/jdbc/**"/> 
              
             <include name="gov/nih/nci/ncicb/cadsr/common/base/process/**"/>
             <include name="gov/nih/nci/ncicb/cadsr/cdebrowser/**"/>
             <include name="gov/nih/nci/ncicb/cadsr/common/struts/common/**"/>
             <include name="gov/nih/nci/ncicb/cadsr/common/servicelocator/**"/>
             <include name="gov/nih/nci/ncicb/cadsr/common/database/**"/>
             <include name="gov/nih/nci/ncicb/cadsr/common/security/jboss/**"/>
             <include name="gov/nih/nci/ncicb/cadsr/common/security/LogoutServlet.class"/>
           </patternset>
       </fileset>
       <fileset dir="${classes.build.dir}">
            <patternset>
              <include name="gov/nih/nci/ncicb/cadsr/common/common/bc4j/**"/>
              <include name="gov/nih/nci/ncicb/cadsr/common/persistence/bc4j/**"/>
              <include name="gov/nih/nci/ncicb/cadsr/common/dto/bc4j/**"/>
            </patternset>
        </fileset>
 	<fileset dir="${classes.build.dir}">
            <patternset>
              <include name="gov/nih/nci/ncicb/cadsr/common/html/**"/>
              <include name="gov/nih/nci/ncicb/cadsr/common/lov/**"/>
              <include name="gov/nih/nci/ncicb/cadsr/common/resource/handler/**"/>
              <include name="gov/nih/nci/ncicb/cadsr/common/util/**"/>
              <include name="gov/nih/nci/ncicb/cadsr/common/xml/**"/>
              <include name="gov/nih/nci/ncicb/oracle/mvc/**"/>
              <include name="gov/nih/nci/ncicb/webtree/**"/>
            </patternset>
        </fileset>                   
        <fileset dir="${classes.build.dir}">
              <patternset>
                <include name="gov/nih/nci/ncicb/cadsr/formbuilder/common/**"/>
                <include name="gov/nih/nci/ncicb/cadsr/formbuilder/struts/**"/>
                <include name="gov/nih/nci/ncicb/cadsr/formbuilder/service/**"/>
                <include name="gov/nih/nci/ncicb/cadsr/ocbrowser/common/**"/>
                <include name="gov/nih/nci/ncicb/cadsr/ocbrowser/struts/**"/> 
                <include name="gov/nih/nci/ncicb/cadsr/ocbrowser/service/**"/>
                <include name="gov/nih/nci/ncicb/cadsr/ocbrowser/util/**"/>
                <include name="gov/nih/nci/ncicb/cadsr/common/admin/**"/>
                <include name="gov/nih/nci/ncicb/cadsr/common/jsp/**"/>
              </patternset>
        </fileset>       
     </copy>
     
    <war warfile="${build.dir}/${war.name}.war" webxml="${web.descriptor.home}/web.xml">
       
      <fileset dir="${config.home}">
        <patternset>
          <include name="WEB-INF/*.tld"/>
          <include name="WEB-INF/struts-config*.xml"/>
          <include name="WEB-INF/cdebrowser/struts-config*.xml"/>
          <include name="WEB-INF/formbuilder/struts-config*.xml"/>
          <include name="WEB-INF/ocbrowser/struts-config*.xml"/>
          <include name="WEB-INF/admin/struts-config*.xml"/>
          <include name="WEB-INF/formbuilder/validat*.xml"/>
          <include name="WEB-INF/jboss-web.xml"/>
          <include name="WEB-INF/spring/*.xml"/>
          <include name="WEB-INF/ehcache.xml"/>
          <include name="WEB-INF/cdebrowser-faces-config.xml"/>
          <include name="WEB-INF/*.taglib.xml"/>
        </patternset>
      </fileset>
      <fileset dir="${classes.build.dir}">
        <patternset>
          <include name="WEB-INF/classes/**/*.*"/>
        </patternset>
      </fileset>        
 
      <fileset dir="${jsp.dir}/">
        <patternset>
          <include name="formbuilder/**/*.*"/>  
         <!-- release 3.0, reorganze ui directory -->
          <include name="cdebrowser/**/*.*"/>  
          <include name="ocbrowser/**/*.*"/>  
          <include name="admin/**/*.*"/>  
          <include name="*.jsp"/>
          <include name="*.js"/>
        </patternset>
      </fileset>
      
      <fileset dir="${jsp.dir}/">
              <patternset>
                <include name="common/**/*.*"/>  
                <include name="*.jsp"/>
                <exclude name="common_variable_length_bottom_border.jsp"/>
                <exclude name="common_bottom_border.jsp"/>                
              </patternset>
      </fileset>

      <fileset dir="${classes.build.dir}/jsp/">
              <patternset>
                <include name="common/**/*.*"/>                 
              </patternset>
      </fileset>
           
      
  <!-- release 3.0, reorganze ui directory -->
      <fileset dir="${html.dir}/">
        <patternset>
          <include name="common/**/*.*"/>   
        </patternset>         
      </fileset>

      <fileset dir="${ui.dir}/">
        <patternset>
          <include name="i/**/*.*"/>   
        </patternset>
      </fileset>

      <fileset dir="${ui.dir}/">
        <patternset>
          <include name="jsLib/**/*.*"/>   
          <!-- release 3.0, moved css to its own directory -->
          <include name="css/**/*.*"/>   
        </patternset>      
      </fileset>

      <lib dir="${java.lib.dir}">
        	<include name="classes12.jar"/>
       	<include name="cle20.jar"/>
 
        	<include name="xml-apis.jar"/>
       	<include name="xercesImpl.jar"/>
       	<include name="healthtoolkit.zip"/>
       	<include name="nls_charset12.jar"/>
       	<include name="ssosdk307.jar"/>
       	<include name="xmlcomp.jar"/>         
       	<include name="xsu12.jar"/> 
       	
       	<!--BC4J libs -->
       	<include name="xmlparserv2.jar"/>       	
       	<include name="collections.jar"/>
       	<include name="bc4jmt.jar"/>
       	<include name="jdev-cm.jar"/>
       	<include name="jdev-rt.jar"/>
       	<include name="bc4jct.jar"/>
       	<include name="bc4jdatum.jar"/>
       	<include name="bc4jdomorcl.jar"/>
       	     	
       
       	<!-- old bc4j -->
       	<!--include name="bc4jct.jar"/-->
       	<!--include name="bc4jdatum.jar"/-->
       	<!--include name="bc4jdomorcl.jar"/-->
       	<!--include name="bc4jmt.jar"/-->   
       	
       	<!-- Struts libs -->
       	<include name="struts.jar"/>
       	<include name="commons-*.jar"/>
       	<include name="jakarta-oro.jar"/>
       	
       	<!-- Spring Libs -->
       	
       	<include name="spring-1.2.4.jar"/>
       	<include name="spring-context-1.2.4.jar"/>
       	<include name="spring-core-1.2.4.jar"/>
       	<include name="spring-dao-1.2.4.jar"/>
       	<include name="spring-orm-1.2.4.jar"/>
       	<include name="spring-context-1.2.4.jar"/>
       	<include name="spring-web-1.2.4.jar"/>
       	<include name="spring-hibernate-1.2.4.jar"/>
       	<include name="spring-beans-1.2.4.jar"/>
       	
       	<include name="hibernate3.jar"/>
       	<include name="ehcache-0.7.jar"/>
       	
       	<include name="aopalliance.jar"/>
       	
       	<!-- cadsr api lib -->
       	<include name="cadsr-api.jar"/>
       	
       	<!-- POI libs -->
       	<include name="poi-2.5.1-final-20040804.jar"/>
       	
       	<!-- Sentinal API -->
       	<include name="cadsrsentinelapi.jar"/>
         
         <!-- JSF libs -->
       	<include name="myfaces*.jar"/>
       	<include name="tomahawk*.jar"/>
         
         <!-- AJAX libs -->
        	<include name="jsfCompAA-0.1.jar"/>
       	<include name="ajaxanywhere-1.1.0.6.jar"/>
        
      </lib>
       
      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Class-Path" value="persistence_form.jar common.jar"/>
      </manifest>  
    </war>
  </target>
   
  <!-- =========== END CREATE WAR FILE ======================= -->
   
  
  <!-- =========== CREATE EJB JAR ======================= -->
      <target name="jar_ejb" depends="compile,jar_persistence_form,jar_common">
        <copy todir="${classes.build.dir}/ejb/META-INF/">      
         <fileset dir="${config.home}/ejb">
           <patternset>
            <include name="ejb-jar.xml"/> 
            <include name="jboss.xml"/>
           </patternset>
         </fileset>      
       </copy>  
      
       <jar jarfile="${build.dir}/${ejb.name}.jar">
           <fileset dir="${classes.build.dir}">
              <patternset>
                <include name="gov/nih/nci/ncicb/cadsr/formbuilder/ejb/**/*.*"/>
                <include name="gov/nih/nci/ncicb/cadsr/common/ejb/common/**/*.*"/>
              </patternset>
            </fileset>          
	    <fileset dir="${classes.build.dir}/ejb" includes="META-INF/ejb-jar.xml"/>
            <fileset dir="${classes.build.dir}/ejb" includes="META-INF/jboss.xml"/>
            <manifest>
               <attribute name="Built-By" value="${user.name}"/>
               <attribute name="Class-Path" 
                  value="persistence_form.jar common.jar 
                  spring-1.2.4.jar spring-context-1.2.4.jar spring-core-1.2.4.jar 
                  spring-dao-1.2.4.jar spring-orm-1.2.4.jar spring-hibernate-1.2.4.jar
                  spring-beans-1.2.4.jar
                  commons-logging.jar log4j-1.2.8.jar properties/"/>
            </manifest>  	    
         </jar>         
      </target>
  <!-- =========== END JAR PROCESS ======================= -->  

  <!-- =========== CREATE EAR FILE ======================= -->
    <target name="ear_cdebrowser" depends="jar_ejb,war_cdebrowser">
            
      <!-- Create ear file -->      
      <ear earfile="${build.dir}/${ear.name}.ear" appxml="${classes.build.dir}/META-INF/application.xml">
        <fileset dir="${build.dir}">
          <patternset>
            <include name="*.war"/>
            <include name="*.jar"/>
          </patternset>
        </fileset>

        <fileset dir="${classes.build.dir}/META-INF">
          <patternset>
            <include name="properties/log4j.properties"/>
          </patternset>
        </fileset>
        
        
        <fileset dir="${java.lib.dir}">
          <patternset>
            <include name="spring-1.2.4.jar"/>
            <include name="spring-context-1.2.4.jar"/>
            <include name="spring-core-1.2.4.jar"/>
            <include name="spring-dao-1.2.4.jar"/>
            <include name="spring-orm-1.2.4.jar"/>
            <include name="spring-hibernate-1.2.4.jar"/>
            <include name="spring-beans-1.2.4.jar"/>
          </patternset>
        </fileset>

        <fileset dir="${classes.build.dir}">
          <patternset>
            <include name="persistence_form.jar"/>
            <include name="common.jar"/>
          </patternset>
        </fileset>        
        
        
        <patternset>
          <exclude name="*.*"/>
        </patternset>
      </ear>
    </target>
  <!-- =========== END CREATE EAR FILE ======================= -->


 <!-- ===========  OPEN SOURCE ======================= -->
   <target name="opensource_init" depends="init">
     <mkdir dir="${open.source.dir}"/>
     <mkdir dir="${open.source.dir.raw}"/>
     <mkdir dir="${open.source.dir.raw.config}"/>
     <mkdir dir="${open.source.dir.raw.lib}"/>
     <mkdir dir="${open.source.dir.raw.src}"/>
     <mkdir dir="${open.source.dir.raw.ui}"/>
     <mkdir dir="${build.docs.setup.dir}"/>

     
     <!-- Copy doc to build dir -->
     <filter token="user.password" value="${opensource.user.password}"/>
     <filter token="cdebrowser.version" value="${cdebrowser.version}"/>
     <filter token="cdebrowser.version.suffix" value="${cdebrowser.version.suffix}"/>
     <copy todir="${build.docs.setup.dir}/" filtering="true">      
         <fileset dir="${cdebrowser.docs.setup.dir}">
           <patternset>
             <include name="${app.docs.setup.distribution.src.readme.name}.txt"/>
             <include name="${open.source.readme.name}.txt"/>
           </patternset>
         </fileset>               
      </copy>
      
     
     <!-- copy ui -->  
     
     <copy todir="${open.source.dir.raw.ui}/">      
         <fileset dir="${ui.dir}">
           <patternset>
             <include name="**/*.*"/>
             <exclude name="**/images/*.*"/>
             <exclude name="**/i/*.*"/>
           </patternset>
         </fileset>               
      </copy> 
      
     <!-- copy src -->
     <copy todir="${open.source.dir.raw.src}">      
         <fileset dir="${java.src.dir}">
           <patternset>
             <include name="**/*.xml"/>
             <exclude name="*build.xml"/>
             <include name="**/*.properties"/>
             <include name="**/*.java"/>
           </patternset>
         </fileset>            
      </copy>    
    <!-- copy config -->
    
     <!-- copy build file -->
     
     <copy todir="${open.source.dir.raw.src}">      
         <fileset dir="${config.opensource}/scripts">
           <patternset>
             <include name="build.xml"/>
           </patternset>
         </fileset>            
      </copy>    
    <!-- copy config -->
    
     <copy todir="${open.source.dir.raw.config}" filtering="true">      
         <fileset dir="${config.opensource}">
           <patternset>
             <include name="connections/${app.setup.jboss.oracle.datasource.filename}"/>
             <include name="connections/cle-providers.xml"/>
           </patternset>
         </fileset>               
      </copy>   
     <copy todir="${open.source.dir.raw.config}">      
         <fileset dir="${config.home}">
           <patternset>
             <include name="ejb/*.*"/>
             <exclude name="ejb/orion*" />
           </patternset>
         </fileset>               
      </copy>   
     <copy todir="${open.source.dir.raw.config}">      
         <fileset dir="${config.home}">
           <patternset>
             <include name="META-INF/*.*"/>
             <exclude name="META-INF/orion*" />
             <exclude name="META-INF/principals.xml" />
           </patternset>
         </fileset>               
      </copy>  
     <copy todir="${open.source.dir.raw.config}">      
         <fileset dir="${config.home}">
           <patternset>
             <include name="WEB-INF/*.*"/>
             <exclude name="WEB-INF/orion*" />
             <exclude name="WEB-INF/web.xml" />
           </patternset>
         </fileset>               
      </copy>  
     <copy todir="${open.source.dir.raw.config}/WEB-INF">      
         <fileset dir="${config.home}/WEB-INF">
           <patternset>
             <include name="jboss/web.xml"/>
             <include name="admin/*.xml"/>
             <include name="cdebrowser/*.xml"/>
             <include name="formbuilder/*.xml"/>
             <include name="spring/*.xml"/>
             <include name="ocbrowser/*.xml"/>
             <include name="cdebrowser-faces-config.xml"/>
             <include name="*.taglib.xml"/>
           </patternset>
         </fileset>               
      </copy>       
     <copy todir="${open.source.dir.raw.config}">      
         <fileset dir="${config.home}">
           <patternset>
             <include name="properties/*.*"/>
             <exclude name="properties/cdebrowser.properties"/>
           </patternset>
         </fileset>               
      </copy> 
     <copy todir="${open.source.dir.raw.config}">      
         <fileset dir="${config.opensource}">
           <patternset>
             <include name="properties/jboss/cdebrowser.properties"/>
           </patternset>
         </fileset>               
      </copy> 
      
     <copy todir="${open.source.dir.raw.config}">      
         <fileset dir="${config.home}">
           <patternset>
             <include name="services/cdeBrowser.xml"/>
           </patternset>
         </fileset>               
      </copy>   
     
   </target>

 <target name="opensource_to_accii" depends="opensource_init">
  <native2ascii src="${open.source.dir.raw}" dest="${open.source.dir}/ascii/${open.source.dir.base.name}/"
      includes="**/*.*" />        
 </target>
 

  <target name="opensource_unit" depends="opensource_to_accii">
      <!-- copy libs -->
     <copy todir="${open.source.dir}/ascii/${open.source.dir.base.name}/lib/java">      
         <fileset dir="${java.lib.dir}">
           <patternset>
             <include name="**/*.*"/>
           </patternset>
         </fileset>               
      </copy>       
     <!-- copy images -->
     <copy todir="${open.source.dir}/ascii/${open.source.dir.base.name}/ui">      
         <fileset dir="${ui.dir}">
           <patternset>
             <include name="i/*.*"/>
           </patternset>
         </fileset>               
      </copy>  
     <copy todir="${open.source.dir}/ascii/${open.source.dir.base.name}/ui">      
         <fileset dir="${ui.dir}">
           <patternset>
             <include name="html/common/skins/CDEBrowser1/images/*.*"/>
           </patternset>
         </fileset>               
      </copy> 
      
      <native2ascii src="${build.docs.setup.dir}" 
                    dest="${open.source.dir}/ascii/${open.source.dir.base.name}"
               includes="${open.source.readme.name}.txt"               
               />        
  </target>
  
 <target name="opensource_windows" depends="opensource_unit">
   <zip destfile="${dist.dir}/${open.source.file.name.windows}.zip"
       basedir="${open.source.dir}/ascii"
       update="true" />
 </target>

  
  <target name="opensource_unix" depends="opensource_unit">
    <tar tarfile="${build.dir}/${open.source.file.name.unix}.tar"
        basedir="${open.source.dir}/ascii"
        longfile="gnu"/>
   <gzip zipfile="${dist.dir}/${open.source.file.name.unix}.tar.gz" 
      src="${build.dir}/${open.source.file.name.unix}.tar"
       />
 </target> 
 
  <!-- create download bundles -->
  
  <target name="download_init" depends="opensource_unit"> 
    <delete file="${open.source.dir}/ascii/${open.source.dir.base.name}/${open.source.readme.name}.txt"/>
    
     <!-- Copy doc to build dir -->
    <filter token="user.password" value="${dev.user.password}"/>
    <filter token="cdebrowser.version" value="${cdebrowser.version}"/>
    <filter token="cdebrowser.version.suffix" value="${cdebrowser.version.suffix}"/>
    
    <copy todir="${build.docs.setup.dir}/" filtering="true">      
        <fileset dir="${cdebrowser.docs.setup.dir}">
            <patternset>
                    <include name="${app.setup.jboss.install.name}.txt"/>
                    <include name="${app.docs.setup.distribution.readme.name}.txt"/>                    
            </patternset>
        </fileset>               
     </copy>
      
     <native2ascii src="${build.docs.setup.dir}" dest="${open.source.dir}/ascii/${open.source.dir.base.name}"
               includes="${app.setup.jboss.install.name}.txt"               
               />     
                    
  </target>
  
  <target name="dist_download" depends="download_init">         
     <zip destfile="${dist.dir}/${download.file.name.windows}.zip"
         basedir="${open.source.dir}/ascii"
         update="true" />
   
     <tar tarfile="${build.dir}/${download.file.name.unix}.tar"
         basedir="${open.source.dir}/ascii"
         longfile="gnu"/>
    <gzip zipfile="${dist.dir}/${download.file.name.unix}.tar.gz" 
       src="${build.dir}/${download.file.name.unix}.tar"
        />
    <native2ascii src="${build.docs.setup.dir}" dest="${dist.dir}"
               includes="${app.docs.setup.distribution.readme.name}.txt"               
               />         
 </target> 
 
  
                  
               

<!-- ===========  End OPEN SOURCE ======================= -->

 <!-- =========== Deployment targets below ======================= -->
 

     
   <target name="jboss_stop">
           <exec executable="cmd.exe" spawn="true" os="Windows 2000">
                           <arg value="/C"/>
                           <arg value="start"/>
                           <arg value="${jboss.home}/bin/${jboss.stop.script.name} -S"/>
           </exec>
  </target>
  
  <target name="jboss_startdebug">
               <exec executable="cmd.exe" spawn="true" os="Windows 2000">
                               <arg value="/C"/>
                               <arg value="start"/>
                               <arg value="${jboss.home}/bin/${jboss.start.debug.script.name}"/>
               </exec>
  </target>
  
  <target name="jboss_start">
             <exec executable="cmd.exe" spawn="true" os="Windows 2000">
                             <arg value="/C"/>
                             <arg value="start"/>
                             <arg value="${jboss.home}/bin/${jboss.start.script.name}"/>
             </exec>
  </target>
  
   <target  name="clean_jboss" depends="init" >       
	<delete dir="${jboss.home}/server/default/tmp/deploy" failonerror="true"  verbose="true" />
	<delete file="${jboss.home}/server/default/deploy/${ear.name}.ear" failonerror="true" verbose="true" />
   </target>    
   
   <target  name="deploy_dev" depends="clean,clean_jboss,dev_config,debug_setting,ear_cdebrowser"> 
     <copy todir="${jboss.home}/server/default/deploy">      
         <fileset dir="${build.dir}">
           <patternset>
             <include name="${ear.name}.ear"/>
           </patternset>
         </fileset> 
     </copy>
     <filter token="user.password" value="${dev.user.password}"/>
     <copy todir="${jboss.home}/server/default/deploy" overwrite="Yes" filtering="true">    
         <fileset dir="${config.home}/connections">
           <patternset>
             <include name="oracle-ds.xml"/>
           </patternset>
         </fileset>
      </copy>       
   </target> 
   
   <target  name="deploy_dev_start" depends="deploy_dev,jboss_startdebug"> 
   </target> 
   
  
   <target  name="deploy_qa" depends="clean,clean_jboss,qa_config,debug_setting,ear_cdebrowser"> 
     <copy todir="${jboss.home}/server/default/deploy">      
         <fileset dir="${build.dir}">
           <patternset>
             <include name="${ear.name}.ear"/>
           </patternset>
         </fileset> 
     </copy>  
     <filter token="user.password" value="${qa.user.password}"/>
     <copy todir="${jboss.home}/server/default/deploy" overwrite="Yes" filtering="true">    
         <fileset dir="${config.qa}/connections">
           <patternset>
             <include name="oracle-ds.xml"/>
           </patternset>
         </fileset>
      </copy>       
   </target> 
   
      <target  name="deploy_qa_start" depends="deploy_qa,jboss_startdebug"> 
   </target>

   <target  name="deploy_stage" depends="clean,clean_jboss,stage_config,debug_setting,ear_cdebrowser"> 
     <copy todir="${jboss.home}/server/default/deploy">      
         <fileset dir="${build.dir}">
           <patternset>
             <include name="${ear.name}.ear"/>
           </patternset>
         </fileset> 
     </copy> 
     <filter token="user.password" value="${stage.user.password}"/>
     <copy todir="${jboss.home}/server/default/deploy" overwrite="Yes" filtering="true">    
         <fileset dir="${config.stage}/connections">
           <patternset>
             <include name="oracle-ds.xml"/>
           </patternset>
         </fileset>
      </copy>       
   </target> 

  <target  name="deploy_load" depends="clean,clean_jboss,load_config,debug_setting,ear_cdebrowser"> 
     <copy todir="${jboss.home}/server/default/deploy">      
         <fileset dir="${build.dir}">
           <patternset>
             <include name="${ear.name}.ear"/>
           </patternset>
         </fileset> 
     </copy> 
     <filter token="user.password" value="${load.user.password}"/>
     <copy todir="${jboss.home}/server/default/deploy" overwrite="Yes" filtering="true">    
         <fileset dir="${config.load}/connections">
           <patternset>
             <include name="oracle-ds.xml"/>
           </patternset>
         </fileset>
      </copy>       
   </target> 
   
      <target  name="deploy_stage_start" depends="deploy_stage,jboss_startdebug"> 
   </target>

   <target  name="deploy_umlstage" depends="clean,clean_jboss,umlstage_config,debug_setting,ear_cdebrowser"> 
     <copy todir="${jboss.home}/server/default/deploy">      
         <fileset dir="${build.dir}">
           <patternset>
             <include name="${ear.name}.ear"/>
           </patternset>
         </fileset> 
     </copy> 
     <filter token="user.password" value="${umlstage.user.password}"/>
     <copy todir="${jboss.home}/server/default/deploy" overwrite="Yes" filtering="true">    
         <fileset dir="${config.umlstage}/connections">
           <patternset>
             <include name="oracle-ds.xml"/>
           </patternset>
         </fileset>
      </copy>       
   </target> 
   <target  name="deploy_umlstage_start" depends="deploy_umlstage,jboss_startdebug"> 
   </target>

   
   <target  name="deploy_prod" depends="clean,clean_jboss,prod_config,debug_setting,ear_cdebrowser"> 
     <copy todir="${jboss.home}/server/default/deploy">      
         <fileset dir="${build.dir}">
           <patternset>
             <include name="${ear.name}.ear"/>
           </patternset>
         </fileset> 
     </copy> 
     <filter token="user.password" value="${prod.user.password}"/>
     <copy todir="${jboss.home}/server/default/deploy" overwrite="Yes" filtering="true">    
         <fileset dir="${config.prod}/connections">
           <patternset>
             <include name="oracle-ds.xml"/>
           </patternset>
         </fileset>
      </copy>       
   </target> 
   
      <target  name="deploy_prod_start" depends="deploy_prod,jboss_startdebug"> 
   </target>   
<!-- =========== End Deployment targets  ======================= -->

<!-- =========== Test Targets ========================== -->

<!-- Use to test a bootable class.
     use -Dtest.class=your.full.class.Name 
     -->
  <target name="test-class" depends="compile">
    <java fork="true" classname="${test.class}">
      <classpath refid="classpath"/>
      <classpath> 
        <pathelement location="${build.dir}/classes" /> 
      </classpath>
    </java>
  </target>
<!-- =========== End Test Targets ====================== -->

<!-- =========== Copy DISTRIBUTION EAR============== -->
  <target name="dist_ear_copy" depends="dev_config,ear_cdebrowser">  
     <copy todir="${dist.dir}">      
         <fileset dir="${build.dir}">
           <patternset>
             <include name="${ear.name}.ear"/>
           </patternset>
         </fileset>    
      </copy>          
   </target>   
   <!-- =========== LOCAL DISTRIBUTION============== -->
	   <target name="dist_local" depends="dist_dev">   
	    <copy todir="${jboss.deploy}"  overwrite="YES" >      
	        <fileset dir="${build.dir}">
	          <patternset>
	            <include name="${ear.name}.ear"/>
	          </patternset>
	        </fileset>    
	     </copy>             	
	   </target>      
		  
  
  <!-- =========== DEV DISTRIBUTION============== -->
   <target name="dist_dev" depends="clean_build_dir,dev_config,debug_setting,ear_cdebrowser,dist_ear_copy">      
   </target>      
  <!-- =========== END DEV DISTRIBUTION ======================= -->
  
  <!-- =========== QA DISTRIBUTION============== -->
        <target name="dist_qa" depends="clean_build_dir,qa_config,debug_setting,ear_cdebrowser,dist_ear_copy">  
        </target>      
  <!-- =========== END TEST DISTRIBUTION ======================= -->
  
  <!-- =========== STAGE DISTRIBUTION============== -->
       <target name="dist_stage" depends="clean_build_dir,stage_config,debug_setting,ear_cdebrowser,dist_ear_copy">  
        </target>      
  <!-- =========== END STAGE DISTRIBUTION ======================= -->  
  <!-- =========== LOAD DISTRIBUTION============== -->
       <target name="dist_load" depends="clean_build_dir,load_config,debug_setting,ear_cdebrowser,dist_ear_copy">  
        </target>      
  <!-- =========== END LOAD DISTRIBUTION ======================= -->
 
  <!-- =========== UML STAGE DISTRIBUTION============== -->
       <target name="dist_umlstage" depends="clean_build_dir,umlstage_config,debug_setting,ear_cdebrowser,dist_ear_copy">  
        </target>      
  <!-- =========== END STAGE DISTRIBUTION ======================= -->
  

  <!-- =========== PROD DISTRIBUTION============== -->
        <target name="dist_prod" depends="clean_build_dir,prod_config,debug_setting,ear_cdebrowser,dist_ear_copy">  
        </target>      
  <!-- =========== END PROD DISTRIBUTION ======================= -->
  
  <!-- =========== PROD DISTRIBUTION Complete============== -->
        <target name="dist_download_full" depends="dist_opensource, dist_download ">  
     
        </target>   
  <!-- =========== END PROD DISTRIBUTION ======================= -->

  <!-- =========== PROD DISTRIBUTION Complete============== -->
        <target name="dist_opensource" depends="opensource_windows,
                opensource_unix">  
               <native2ascii src="${build.docs.setup.dir}" dest="${dist.dir}"
               includes="${app.docs.setup.distribution.src.readme.name}.txt"               
               />        
        </target>      
  <!-- =========== END PROD DISTRIBUTION ======================= --> 
  

  
  <!-- ===========cadsr api ========================== -->

 <target name="cadsrapi_build">
   <ant antfile="${cadsrapi.location.build}/${cadsrapi.buildfile.name}"
       inheritAll= "false" target="clean"/>
   <ant antfile="${cadsrapi.location.build}/${cadsrapi.buildfile.name}"
       inheritAll= "false" target="dist_ext"/>
 </target> 
 
 <target name="cadsrapi_update" depends="cadsrapi_build" >
   <copy todir="${java.lib.dir}">      
        <fileset dir="${cadsrapi.home}/${cadsrapi.dist.dir}">
           <patternset>
             <include name="${cadsrapi.lib.name}"/>
           </patternset>
         </fileset>    
    </copy>  
 </target>  
 
 <!-- ===========cadsr api end ========================== -->
 
 <!-- =========== BUILD HELPERS ======================= -->
   <target name="help" depends="init">
     <echo>
 
       ===================================================================
       edoc Build System - Help
       ===================================================================
 
       Targets:
 
       clean                  - Cleans the buid area.
       ear_cdebrowser	      - Create ear file for cdebrowser
       war_cdebrowser	      - Create war file for cdebrowser
       jar_formbuilder_ejb    - Create formbuilder ejb
       jar_persistence_form   - Creates form builder persistence jar
       jar_common	      - Creates common jar

       
       dist_dev		      - Creates Developement Clean distribution.
       dist_qa		      - Creates QA Clean distribution.
       dist_stage	      - Creates Stage Clean distribution.
       dist_load		  - testing load	
       dist_prod	      - Creates Prod Clean distribution.
       
       cadsrapi_update	      - Creates a new cadsr-api lib file

       deploy_dev_start       - Deploy to dev and Start JOSS
       deploy_qa_start	      - Deploy to QA and Start JOSS
       deploy_stage_start     - Deploy to Stage and Start JBoSS
       deploy_prod_start      - Deploy to Prod and Start JOSS
       
       dist_download_full     - Complete OpenSource files
       jboss_startdebug       - Start JBOSS in debug mod
       
       help                   - This help screen.
 
       Settings:
           Project Home:    ${project.home}
           User -Dset_debug=true to use local properties file instead DB table
       Properties files has been moved to a database tabel. If you would like to use
       a local properties file user 
       ===================================================================
 
     </echo>
   </target>
   <!-- end help -->  
</project>