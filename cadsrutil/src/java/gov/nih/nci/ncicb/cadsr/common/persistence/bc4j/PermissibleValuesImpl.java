/*L
 * Copyright Oracle inc, SAIC-F
 *
 * Distributed under the OSI-approved BSD 3-Clause License.
 * See http://ncip.github.com/cadsr-util/LICENSE.txt for details.
 */

package gov.nih.nci.ncicb.cadsr.common.persistence.bc4j;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.Key;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class PermissibleValuesImpl extends EntityImpl 
{
  public static final int PVIDSEQ = 0;
  public static final int VALUE = 1;
  public static final int SHORTMEANING = 2;
  public static final int MEANINGDESCRIPTION = 3;
  public static final int BEGINDATE = 4;
  public static final int ENDDATE = 5;
  public static final int HIGHVALUENUM = 6;
  public static final int LOWVALUENUM = 7;
  public static final int DATECREATED = 8;
  public static final int CREATEDBY = 9;
  public static final int DATEMODIFIED = 10;
  public static final int MODIFIEDBY = 11;
  public static final int VALUEMEANINGSLOV = 12;
  public static final int VDPVS = 13;






  private static EntityDefImpl mDefinitionObject;

  /**
   * 
   * This is the default constructor (do not remove)
   */
  public PermissibleValuesImpl()
  {
  }

  /**
   * 
   *  Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("gov.nih.nci.ncicb.cadsr.common.persistence.bc4j.PermissibleValues");
    }
    return mDefinitionObject;
  }







  /**
   * 
   * Gets the attribute value for PvIdseq, using the alias name PvIdseq
   */
  public String getPvIdseq()
  {
    return (String)getAttributeInternal(PVIDSEQ);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for PvIdseq
   */
  public void setPvIdseq(String value)
  {
    setAttributeInternal(PVIDSEQ, value);
  }

  /**
   * 
   * Gets the attribute value for Value, using the alias name Value
   */
  public String getValue()
  {
    return (String)getAttributeInternal(VALUE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for Value
   */
  public void setValue(String value)
  {
    setAttributeInternal(VALUE, value);
  }

  /**
   * 
   * Gets the attribute value for ShortMeaning, using the alias name ShortMeaning
   */
  public String getShortMeaning()
  {
    return (String)getAttributeInternal(SHORTMEANING);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ShortMeaning
   */
  public void setShortMeaning(String value)
  {
    setAttributeInternal(SHORTMEANING, value);
  }

  /**
   * 
   * Gets the attribute value for MeaningDescription, using the alias name MeaningDescription
   */
  public String getMeaningDescription()
  {
    return (String)getAttributeInternal(MEANINGDESCRIPTION);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for MeaningDescription
   */
  public void setMeaningDescription(String value)
  {
    setAttributeInternal(MEANINGDESCRIPTION, value);
  }

  /**
   * 
   * Gets the attribute value for BeginDate, using the alias name BeginDate
   */
  public Date getBeginDate()
  {
    return (Date)getAttributeInternal(BEGINDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for BeginDate
   */
  public void setBeginDate(Date value)
  {
    setAttributeInternal(BEGINDATE, value);
  }

  /**
   * 
   * Gets the attribute value for EndDate, using the alias name EndDate
   */
  public Date getEndDate()
  {
    return (Date)getAttributeInternal(ENDDATE);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for EndDate
   */
  public void setEndDate(Date value)
  {
    setAttributeInternal(ENDDATE, value);
  }

  /**
   * 
   * Gets the attribute value for HighValueNum, using the alias name HighValueNum
   */
  public Number getHighValueNum()
  {
    return (Number)getAttributeInternal(HIGHVALUENUM);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for HighValueNum
   */
  public void setHighValueNum(Number value)
  {
    setAttributeInternal(HIGHVALUENUM, value);
  }

  /**
   * 
   * Gets the attribute value for LowValueNum, using the alias name LowValueNum
   */
  public Number getLowValueNum()
  {
    return (Number)getAttributeInternal(LOWVALUENUM);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for LowValueNum
   */
  public void setLowValueNum(Number value)
  {
    setAttributeInternal(LOWVALUENUM, value);
  }

  /**
   * 
   * Gets the attribute value for DateCreated, using the alias name DateCreated
   */
  public Date getDateCreated()
  {
    return (Date)getAttributeInternal(DATECREATED);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DateCreated
   */
  public void setDateCreated(Date value)
  {
    setAttributeInternal(DATECREATED, value);
  }

  /**
   * 
   * Gets the attribute value for CreatedBy, using the alias name CreatedBy
   */
  public String getCreatedBy()
  {
    return (String)getAttributeInternal(CREATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for CreatedBy
   */
  public void setCreatedBy(String value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for DateModified, using the alias name DateModified
   */
  public Date getDateModified()
  {
    return (Date)getAttributeInternal(DATEMODIFIED);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for DateModified
   */
  public void setDateModified(Date value)
  {
    setAttributeInternal(DATEMODIFIED, value);
  }

  /**
   * 
   * Gets the attribute value for ModifiedBy, using the alias name ModifiedBy
   */
  public String getModifiedBy()
  {
    return (String)getAttributeInternal(MODIFIEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as the attribute value for ModifiedBy
   */
  public void setModifiedBy(String value)
  {
    setAttributeInternal(MODIFIEDBY, value);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case PVIDSEQ:
        return getPvIdseq();
      case VALUE:
        return getValue();
      case SHORTMEANING:
        return getShortMeaning();
      case MEANINGDESCRIPTION:
        return getMeaningDescription();
      case BEGINDATE:
        return getBeginDate();
      case ENDDATE:
        return getEndDate();
      case HIGHVALUENUM:
        return getHighValueNum();
      case LOWVALUENUM:
        return getLowValueNum();
      case DATECREATED:
        return getDateCreated();
      case CREATEDBY:
        return getCreatedBy();
      case DATEMODIFIED:
        return getDateModified();
      case MODIFIEDBY:
        return getModifiedBy();
      case VDPVS:
        return getVdPvs();
      case VALUEMEANINGSLOV:
        return getValueMeaningsLov();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case PVIDSEQ:
        setPvIdseq((String)value);
        return;
      case VALUE:
        setValue((String)value);
        return;
      case SHORTMEANING:
        setShortMeaning((String)value);
        return;
      case MEANINGDESCRIPTION:
        setMeaningDescription((String)value);
        return;
      case BEGINDATE:
        setBeginDate((Date)value);
        return;
      case ENDDATE:
        setEndDate((Date)value);
        return;
      case HIGHVALUENUM:
        setHighValueNum((Number)value);
        return;
      case LOWVALUENUM:
        setLowValueNum((Number)value);
        return;
      case DATECREATED:
        setDateCreated((Date)value);
        return;
      case CREATEDBY:
        setCreatedBy((String)value);
        return;
      case DATEMODIFIED:
        setDateModified((Date)value);
        return;
      case MODIFIEDBY:
        setModifiedBy((String)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }


  /**
   * 
   * Gets the associated entity ValueMeaningsLovImpl
   */
  public ValueMeaningsLovImpl getValueMeaningsLov()
  {
    return (ValueMeaningsLovImpl)getAttributeInternal(VALUEMEANINGSLOV);
  }

  /**
   * 
   * Sets <code>value</code> as the associated entity ValueMeaningsLovImpl
   */
  public void setValueMeaningsLov(ValueMeaningsLovImpl value)
  {
    setAttributeInternal(VALUEMEANINGSLOV, value);
  }


  /**
   * 
   * Gets the associated entity oracle.jbo.RowIterator
   */
  public RowIterator getVdPvs()
  {
    return (RowIterator)getAttributeInternal(VDPVS);
  }

  /**
   * 
   *  Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(String pvIdseq)
  {
    return new Key(new Object[] {pvIdseq});
  }





}