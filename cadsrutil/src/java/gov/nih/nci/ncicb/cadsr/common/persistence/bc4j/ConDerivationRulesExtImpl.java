package gov.nih.nci.ncicb.cadsr.persistence.bc4j;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Date;
import oracle.jbo.RowIterator;
import oracle.jbo.Key;
//  ---------------------------------------------------------------------
//  ---    File generated by Oracle ADF Business Components Design Time.
//  ---    Custom code may be added to this class.
//  ---------------------------------------------------------------------

public class ConDerivationRulesExtImpl extends EntityImpl 
{
  public static final int CONDRIDSEQ = 0;
  public static final int METHODS = 1;
  public static final int RULE = 2;
  public static final int CONCATCHAR = 3;
  public static final int CRTLNAME = 4;
  public static final int DATECREATED = 5;
  public static final int DATEMODIFIED = 6;
  public static final int MODIFIEDBY = 7;
  public static final int CREATEDBY = 8;
  public static final int NAME = 9;
  public static final int COMPONENTCONCEPTSEXT = 10;
  public static final int VALUEMEANINGSLOV = 11;
  public static final int REPRESENTATION = 12;
  public static final int VALUEDOMAINS = 13;




  private static EntityDefImpl mDefinitionObject;

  /**
   * 
   *  This is the default constructor (do not remove)
   */
  public ConDerivationRulesExtImpl()
  {
  }

  /**
   * 
   *  Retrieves the definition object for this instance class.
   */
  public static synchronized EntityDefImpl getDefinitionObject()
  {
    if (mDefinitionObject == null)
    {
      mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("gov.nih.nci.ncicb.cadsr.persistence.bc4j.ConDerivationRulesExt");
    }
    return mDefinitionObject;
  }





  /**
   * 
   *  Gets the attribute value for CondrIdseq, using the alias name CondrIdseq
   */
  public String getCondrIdseq()
  {
    return (String)getAttributeInternal(CONDRIDSEQ);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for CondrIdseq
   */
  public void setCondrIdseq(String value)
  {
    setAttributeInternal(CONDRIDSEQ, value);
  }

  /**
   * 
   *  Gets the attribute value for Methods, using the alias name Methods
   */
  public String getMethods()
  {
    return (String)getAttributeInternal(METHODS);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Methods
   */
  public void setMethods(String value)
  {
    setAttributeInternal(METHODS, value);
  }

  /**
   * 
   *  Gets the attribute value for Rule, using the alias name Rule
   */
  public String getRule()
  {
    return (String)getAttributeInternal(RULE);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Rule
   */
  public void setRule(String value)
  {
    setAttributeInternal(RULE, value);
  }

  /**
   * 
   *  Gets the attribute value for ConcatChar, using the alias name ConcatChar
   */
  public String getConcatChar()
  {
    return (String)getAttributeInternal(CONCATCHAR);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for ConcatChar
   */
  public void setConcatChar(String value)
  {
    setAttributeInternal(CONCATCHAR, value);
  }

  /**
   * 
   *  Gets the attribute value for CrtlName, using the alias name CrtlName
   */
  public String getCrtlName()
  {
    return (String)getAttributeInternal(CRTLNAME);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for CrtlName
   */
  public void setCrtlName(String value)
  {
    setAttributeInternal(CRTLNAME, value);
  }

  /**
   * 
   *  Gets the attribute value for DateCreated, using the alias name DateCreated
   */
  public Date getDateCreated()
  {
    return (Date)getAttributeInternal(DATECREATED);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for DateCreated
   */
  public void setDateCreated(Date value)
  {
    setAttributeInternal(DATECREATED, value);
  }

  /**
   * 
   *  Gets the attribute value for DateModified, using the alias name DateModified
   */
  public Date getDateModified()
  {
    return (Date)getAttributeInternal(DATEMODIFIED);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for DateModified
   */
  public void setDateModified(Date value)
  {
    setAttributeInternal(DATEMODIFIED, value);
  }

  /**
   * 
   *  Gets the attribute value for ModifiedBy, using the alias name ModifiedBy
   */
  public String getModifiedBy()
  {
    return (String)getAttributeInternal(MODIFIEDBY);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for ModifiedBy
   */
  public void setModifiedBy(String value)
  {
    setAttributeInternal(MODIFIEDBY, value);
  }

  /**
   * 
   *  Gets the attribute value for CreatedBy, using the alias name CreatedBy
   */
  public String getCreatedBy()
  {
    return (String)getAttributeInternal(CREATEDBY);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for CreatedBy
   */
  public void setCreatedBy(String value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * 
   *  Gets the attribute value for Name, using the alias name Name
   */
  public String getName()
  {
    return (String)getAttributeInternal(NAME);
  }

  /**
   * 
   *  Sets <code>value</code> as the attribute value for Name
   */
  public void setName(String value)
  {
    setAttributeInternal(NAME, value);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case CONDRIDSEQ:
        return getCondrIdseq();
      case METHODS:
        return getMethods();
      case RULE:
        return getRule();
      case CONCATCHAR:
        return getConcatChar();
      case CRTLNAME:
        return getCrtlName();
      case DATECREATED:
        return getDateCreated();
      case DATEMODIFIED:
        return getDateModified();
      case MODIFIEDBY:
        return getModifiedBy();
      case CREATEDBY:
        return getCreatedBy();
      case NAME:
        return getName();
      case COMPONENTCONCEPTSEXT:
        return getComponentConceptsExt();
      case VALUEMEANINGSLOV:
        return getValueMeaningsLov();
      case REPRESENTATION:
        return getRepresentation();
      case VALUEDOMAINS:
        return getValueDomains();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case CONDRIDSEQ:
        setCondrIdseq((String)value);
        return;
      case METHODS:
        setMethods((String)value);
        return;
      case RULE:
        setRule((String)value);
        return;
      case CONCATCHAR:
        setConcatChar((String)value);
        return;
      case CRTLNAME:
        setCrtlName((String)value);
        return;
      case DATECREATED:
        setDateCreated((Date)value);
        return;
      case DATEMODIFIED:
        setDateModified((Date)value);
        return;
      case MODIFIEDBY:
        setModifiedBy((String)value);
        return;
      case CREATEDBY:
        setCreatedBy((String)value);
        return;
      case NAME:
        setName((String)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  /**
   * 
   *  Gets the associated entity oracle.jbo.RowIterator
   */
  public RowIterator getComponentConceptsExt()
  {
    return (RowIterator)getAttributeInternal(COMPONENTCONCEPTSEXT);
  }

  /**
   * 
   *  Gets the associated entity oracle.jbo.RowIterator
   */
  public RowIterator getValueMeaningsLov()
  {
    return (RowIterator)getAttributeInternal(VALUEMEANINGSLOV);
  }

  /**
   * 
   *  Gets the associated entity oracle.jbo.RowIterator
   */
  public RowIterator getRepresentation()
  {
    return (RowIterator)getAttributeInternal(REPRESENTATION);
  }

  /**
   * 
   *  Gets the associated entity oracle.jbo.RowIterator
   */
  public RowIterator getValueDomains()
  {
    return (RowIterator)getAttributeInternal(VALUEDOMAINS);
  }

  /**
   * 
   *  Creates a Key object based on given key constituents
   */
  public static Key createPrimaryKey(String condrIdseq)
  {
    return new Key(new Object[] {condrIdseq});
  }





}