/*L
 * Copyright Oracle inc, SAIC-F
 *
 * Distributed under the OSI-approved BSD 3-Clause License.
 * See http://ncip.github.com/cadsr-util/LICENSE.txt for details.
 */

package gov.nih.nci.ncicb.cadsr.common.persistence.bc4j;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.Key;
//---------------------------------------------------------------
//---    File generated by Oracle Business Components for Java.
//---------------------------------------------------------------

public class ValueMeaningsLovImpl extends EntityImpl 
{
	public static final int SHORTMEANING = 0;
	public static final int DESCRIPTION = 1;
	public static final int COMMENTS = 2;
	public static final int BEGINDATE = 3;
	public static final int ENDDATE = 4;
	public static final int DATECREATED = 5;
	public static final int CREATEDBY = 6;
	public static final int DATEMODIFIED = 7;
	public static final int MODIFIEDBY = 8;
	public static final int CONDRIDSEQ = 9;
	public static final int VMIDSEQ = 10;
	public static final int PREFERREDNAME = 11;
	public static final int PREFERREDDEFINITION = 12;
	public static final int LONGNAME = 13;  
	public static final int CONTEIDSEQ = 14;
	public static final int ASLNAME = 15; 
	public static final int VERSION = 16;
	public static final int VMID = 17;
	public static final int LATESTVERSIONIND = 18;
	public static final int DELETEDIND = 19;
	public static final int ORIGIN = 20;
	public static final int CHANGENOTE = 21;
	public static final int DEFINITIONSOURCE = 22;
	public static final int CONDERIVATIONRULESEXT = 23;
	public static final int PERMISSIBLEVALUES = 24;


	private static EntityDefImpl mDefinitionObject;

	/**
	 * 
	 * This is the default constructor (do not remove)
	 */
	public ValueMeaningsLovImpl()
	{
	}

	/**
	 * 
	 *  Retrieves the definition object for this instance class.
	 */
	public static synchronized EntityDefImpl getDefinitionObject()
	{
		if (mDefinitionObject == null)
		{
			mDefinitionObject = (EntityDefImpl)EntityDefImpl.findDefObject("gov.nih.nci.ncicb.cadsr.common.persistence.bc4j.ValueMeaningsLov");
		}
		return mDefinitionObject;
	}


	/**
	 * 
	 * Gets the attribute value for ShortMeaning, using the alias name ShortMeaning
	 */
	public String getShortMeaning()
	{
		return (String)getAttributeInternal(SHORTMEANING);
	}

	/**
	 * 
	 * Sets <code>value</code> as the attribute value for ShortMeaning
	 */
	public void setShortMeaning(String value)
	{
		setAttributeInternal(SHORTMEANING, value);
	}

	/**
	 * 
	 * Gets the attribute value for Description, using the alias name Description
	 */
	public String getDescription()
	{
		return (String)getAttributeInternal(DESCRIPTION);
	}

	/**
	 * 
	 * Sets <code>value</code> as the attribute value for Description
	 */
	public void setDescription(String value)
	{
		setAttributeInternal(DESCRIPTION, value);
	}

	/**
	 * 
	 * Gets the attribute value for Comments, using the alias name Comments
	 */
	public String getComments()
	{
		return (String)getAttributeInternal(COMMENTS);
	}

	/**
	 * 
	 * Sets <code>value</code> as the attribute value for Comments
	 */
	public void setComments(String value)
	{
		setAttributeInternal(COMMENTS, value);
	}

	/**
	 * 
	 * Gets the attribute value for BeginDate, using the alias name BeginDate
	 */
	public Date getBeginDate()
	{
		return (Date)getAttributeInternal(BEGINDATE);
	}

	/**
	 * 
	 * Sets <code>value</code> as the attribute value for BeginDate
	 */
	public void setBeginDate(Date value)
	{
		setAttributeInternal(BEGINDATE, value);
	}

	/**
	 * 
	 * Gets the attribute value for EndDate, using the alias name EndDate
	 */
	public Date getEndDate()
	{
		return (Date)getAttributeInternal(ENDDATE);
	}

	/**
	 * 
	 * Sets <code>value</code> as the attribute value for EndDate
	 */
	public void setEndDate(Date value)
	{
		setAttributeInternal(ENDDATE, value);
	}

	/**
	 * 
	 * Gets the attribute value for DateCreated, using the alias name DateCreated
	 */
	public Date getDateCreated()
	{
		return (Date)getAttributeInternal(DATECREATED);
	}

	/**
	 * 
	 * Sets <code>value</code> as the attribute value for DateCreated
	 */
	public void setDateCreated(Date value)
	{
		setAttributeInternal(DATECREATED, value);
	}

	/**
	 * 
	 * Gets the attribute value for CreatedBy, using the alias name CreatedBy
	 */
	public String getCreatedBy()
	{
		return (String)getAttributeInternal(CREATEDBY);
	}

	/**
	 * 
	 * Sets <code>value</code> as the attribute value for CreatedBy
	 */
	public void setCreatedBy(String value)
	{
		setAttributeInternal(CREATEDBY, value);
	}

	/**
	 * 
	 * Gets the attribute value for DateModified, using the alias name DateModified
	 */
	public Date getDateModified()
	{
		return (Date)getAttributeInternal(DATEMODIFIED);
	}

	/**
	 * 
	 * Sets <code>value</code> as the attribute value for DateModified
	 */
	public void setDateModified(Date value)
	{
		setAttributeInternal(DATEMODIFIED, value);
	}

	/**
	 * 
	 * Gets the attribute value for ModifiedBy, using the alias name ModifiedBy
	 */
	public String getModifiedBy()
	{
		return (String)getAttributeInternal(MODIFIEDBY);
	}

	/**
	 * 
	 * Sets <code>value</code> as the attribute value for ModifiedBy
	 */
	public void setModifiedBy(String value)
	{
		setAttributeInternal(MODIFIEDBY, value);
	}

	/**
	 * 
	 * Gets the attribute value for CondrIdseq, using the alias name CondrIdseq
	 */
	public String getCondrIdseq() {
		return (String)getAttributeInternal(CONDRIDSEQ);
	}
	/**
	 * 
	 * Sets <code>value</code> as the attribute value for CondrIdseq
	 */
	public void setCondrIdseq(String value) {
		setAttributeInternal(CONDRIDSEQ, value); 
	}

	/**
	 * Gets the attribute value for vMIDSEQ, using the alias name vMIDSEQ
	 */
	public String getVmIdseq() {
		return (String)getAttributeInternal(VMIDSEQ);
	}
	/**
	 * Sets <code>value</code> as the attribute value for vMIDSEQ
	 */
	public void setVmIdseq(String value) {
		setAttributeInternal(VMIDSEQ, value);
	}

	/**
	 * Gets the attribute value for PreferredName, using the alias name PreferredName
	 */
	public String getPreferredName() {
		return (String)getAttributeInternal(PREFERREDNAME);
	}
	/**
	 * Sets <code>value</code> as the attribute value for PreferredName
	 */
	public void setPreferredName(String value) {
		setAttributeInternal(PREFERREDNAME, value);
	}

	/**
	 * Gets the attribute value for PreferredDefinition, using the alias name PreferredDefinition
	 */
	public String getPreferredDefinition() {
		return (String)getAttributeInternal(PREFERREDDEFINITION);
	}
	/**
	 * Sets <code>value</code> as the attribute value for PreferredDefinition
	 */
	public void setPreferredDefinition(String value) {
		setAttributeInternal(PREFERREDDEFINITION, value);
	}

	/**
	 * Gets the attribute value for LongName, using the alias name LongName
	 */
	public String getLongName() {
		return (String)getAttributeInternal(LONGNAME);
	}
	/**
	 * Sets <code>value</code> as the attribute value for LongName
	 */
	public void setLongName(String value) {
		setAttributeInternal(LONGNAME, value);
	}

	/**
	 * Gets the attribute value for ConteIdseq, using the alias name ConteIdseq
	 */
	public String getConteIdseq() {
		return (String)getAttributeInternal(CONTEIDSEQ);
	}
	/**
	 * Sets <code>value</code> as the attribute value for  ConteIdseq
	 */
	public void setConteIdseq(String value) {
		setAttributeInternal(CONTEIDSEQ, value);
	}

	/**
	 * Gets the attribute value for aSLNAME, using the alias name aSLNAME
	 */
	public String getAslName() {
		return (String)getAttributeInternal(ASLNAME);
	}
	/**
	 *Sets <code>value</code> as the attribute value for aSLNAME
	 */
	public void setAslName(String value) {
		setAttributeInternal(ASLNAME, value) ;
	}

	/**
	 * Gets the attribute value for Version, using the alias name Version
	 */
	public Number getVersion() {
		return (Number)getAttributeInternal(VERSION);
	}
	/**
	 * Sets <code>value</code> as the attribute value for Version
	 */
	public void setVersion(Number value) {
		setAttributeInternal(VERSION, value) ; 
	}

	/**
	 * Gets the attribute value for VmId, using the alias name VmId
	 */
	public Number getVmId() {
		return (Number)getAttributeInternal(VMID);
	}
	/**
	 * Sets <code>value</code> as the attribute value for VmId
	 */
	public void setVmId(Number value) {
		setAttributeInternal(VMID, value);
	}

	/**
	 * Gets the attribute value for LatestVersionInd, using the alias name LatestVersionInd
	 */
	public String getLatestVersionInd() {
		return (String)getAttributeInternal(LATESTVERSIONIND);
	}
	/**
	 * Sets <code>value</code> as the attribute value for LatestVersionInd
	 */
	public void setLatestVersionInd(String value) {
		setAttributeInternal(LATESTVERSIONIND, value);
	}

	/**
	 * Gets the attribute value for DeletedInd, using the alias name DeletedInd
	 */
	public String getDeletedInd() {
		return (String)getAttributeInternal(DELETEDIND);
	}
	/**
	 * Sets <code>value</code> as the attribute value for DeletedInd
	 */
	public void setDeletedInd(String value) {
		setAttributeInternal(DELETEDIND, value);
	}
	/**
	 * Gets the attribute value for oRIGIN, using the alias name oRIGIN
	 */
	public String getOrigin() {
		return (String)getAttributeInternal(ORIGIN);
	}
	/**
	 * Sets <code>value</code> as the attribute value for oRIGIN
	 */
	public void setOrigin(String value) {
		setAttributeInternal(ORIGIN, value);
	}

	/**
	 * Gets the attribute value for cHANGENOTE, using the alias name  cHANGENOTE
	 */
	public String getChangeNote() {
		return (String)getAttributeInternal(CHANGENOTE);
	}
	/**
	 * Sets <code>value</code> as the attribute value for cHANGENOTE
	 */
	public void setChangeNote(String value) {
		setAttributeInternal(CHANGENOTE, value);
	}

	/**
	 * Gets the attribute value for dEFINITIONSOURCE, using the alias name  dEFINITIONSOURCE
	 */
	public String getDefinitionSource() {
		return (String)getAttributeInternal(DEFINITIONSOURCE);
	}
	/**
	 * Sets <code>value</code> as the attribute value for dEFINITIONSOURCE
	 */
	public void setDefinitionSource(String value) {
		setAttributeInternal(DEFINITIONSOURCE, value);
	}

	/**
	 * 
	 *  Gets the associated entity ConDerivationRulesExtImpl
	 */
	public ConDerivationRulesExtImpl getConDerivationRulesExt()
	{
		return (ConDerivationRulesExtImpl)getAttributeInternal(CONDERIVATIONRULESEXT);
	}
	/**
	 * 
	 *  Sets <code>value</code> as the associated entity ConDerivationRulesExtImpl
	 */
	public void setConDerivationRulesExt(ConDerivationRulesExtImpl value)
	{
		setAttributeInternal(CONDERIVATIONRULESEXT, value);
	}

	/**
	 * 
	 * Gets the associated entity oracle.jbo.RowIterator
	 */
	public RowIterator getPermissibleValues()
	{
		return (RowIterator)getAttributeInternal(PERMISSIBLEVALUES);
	}

	/**
	 * 
	 *  Creates a Key object based on given key constituents
	 */
	public static Key createPrimaryKey(String shortMeaning)
	{
		return new Key(new Object[] {shortMeaning});
	}


	//  Generated method. Do not modify.

	protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
	{
		switch (index)
		{
		case SHORTMEANING:
			return getShortMeaning();
		case DESCRIPTION:
			return getDescription();
		case COMMENTS:
			return getComments();
		case BEGINDATE:
			return getBeginDate();
		case ENDDATE:
			return getEndDate();
		case DATECREATED:
			return getDateCreated();
		case CREATEDBY:
			return getCreatedBy();
		case DATEMODIFIED:
			return getDateModified();
		case MODIFIEDBY:
			return getModifiedBy();
		case CONDRIDSEQ:
			return getCondrIdseq();
		case VMIDSEQ:
			return getVmIdseq();
		case PREFERREDNAME:
			return getPreferredName();
		case PREFERREDDEFINITION:
			return getPreferredDefinition();
		case LONGNAME:
			return getLongName();
		case CONTEIDSEQ:
			return getCondrIdseq();
		case ASLNAME:
			return getAslName();
		case VERSION:
			return getVersion();
		case VMID:
			return getVmId();
		case LATESTVERSIONIND:
			return getLatestVersionInd();
		case DELETEDIND:
			return getDeletedInd();
		case ORIGIN:
			return getOrigin();
		case CHANGENOTE:
			return getChangeNote();
		case DEFINITIONSOURCE:
			return getDefinitionSource();
		case PERMISSIBLEVALUES:
			return getPermissibleValues();
		case CONDERIVATIONRULESEXT:
			return getConDerivationRulesExt();
		default:
			return super.getAttrInvokeAccessor(index, attrDef);
		}
	}
	//  Generated method. Do not modify.

	protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
	{
		switch (index)
		{
		case SHORTMEANING:
			setShortMeaning((String)value);
			return;
		case DESCRIPTION:
			setDescription((String)value);
			return;
		case COMMENTS:
			setComments((String)value);
			return;
		case BEGINDATE:
			setBeginDate((Date)value);
			return;
		case ENDDATE:
			setEndDate((Date)value);
			return;
		case DATECREATED:
			setDateCreated((Date)value);
			return;
		case CREATEDBY:
			setCreatedBy((String)value);
			return;
		case DATEMODIFIED:
			setDateModified((Date)value);
			return;
		case MODIFIEDBY:
			setModifiedBy((String)value);
			return;
		case CONDRIDSEQ:
			setCondrIdseq((String)value);
			return;
		case VMIDSEQ:
			setVmIdseq((String)value);
			return ;
		case PREFERREDNAME:
			setPreferredName((String)value);
			return ;		
		case PREFERREDDEFINITION:
			setPreferredDefinition((String)value);
			return ;
		case LONGNAME:
			setLongName((String)value);
			return ;
		case CONTEIDSEQ:
			setConteIdseq((String)value);
			return ;
		case ASLNAME:
			setAslName((String)value);
			return ;
		case VERSION:
			setVersion((Number)value);
			return ;
		case VMID:
			setVmId((Number)value);
			return ;
		case LATESTVERSIONIND:
			setLatestVersionInd((String)value);
			return ;
		case DELETEDIND:
			setDeletedInd((String)value);
			return ;
		case ORIGIN:
			setOrigin((String)value);
			return ;
		case CHANGENOTE:
			setChangeNote((String)value);
			return ;
		case DEFINITIONSOURCE:
			setDefinitionSource((String)value);
			return ;  
		default:
			super.setAttrInvokeAccessor(index, value, attrDef);
		return;
		}
	}

}