/*L
 * Copyright Oracle inc, SAIC-F
 *
 * Distributed under the OSI-approved BSD 3-Clause License.
 * See http://ncip.github.com/cadsr-util/LICENSE.txt for details.
 */

package gov.nih.nci.ncicb.cadsr.common.persistence.bc4j;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.domain.Number;
//  ---------------------------------------------------------------------
//  ---    File generated by Oracle ADF Business Components Design Time.
//  ---    Custom code may be added to this class.
//  ---------------------------------------------------------------------

public class CompConceptsViewObjRowImpl extends ViewRowImpl implements gov.nih.nci.ncicb.cadsr.common.persistence.bc4j.common.CompConceptsViewObjRow 
{


  public static final int CONIDSEQ = 0;
  public static final int PREFERREDNAME = 1;
  public static final int LONGNAME = 2;
  public static final int PREFERREDDEFINITION = 3;
  public static final int CONTEIDSEQ = 4;
  public static final int VERSION = 5;
  public static final int ASLNAME = 6;
  public static final int LATESTVERSIONIND = 7;
  public static final int DEFINITIONSOURCE = 8;
  public static final int CONID = 9;
  public static final int EVSSOURCE = 10;
  public static final int CONDRIDSEQ = 11;
  public static final int CCIDSEQ = 12;
  /**
   * 
   *  This is the default constructor (do not remove)
   */
  public CompConceptsViewObjRowImpl()
  {
  }

  /**
   * 
   *  Gets ConceptsExt entity object.
   */
  public ConceptsExtImpl getConceptsExt()
  {
    return (ConceptsExtImpl)getEntity(0);
  }

  /**
   * 
   *  Gets ComponentConceptsExt entity object.
   */
  public ComponentConceptsExtImpl getComponentConceptsExt()
  {
    return (ComponentConceptsExtImpl)getEntity(1);
  }

  /**
   * 
   *  Gets the attribute value for CON_IDSEQ using the alias name ConIdseq
   */
  public String getConIdseq()
  {
    return (String)getAttributeInternal(CONIDSEQ);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for CON_IDSEQ using the alias name ConIdseq
   */
  public void setConIdseq(String value)
  {
    setAttributeInternal(CONIDSEQ, value);
  }

  /**
   * 
   *  Gets the attribute value for PREFERRED_NAME using the alias name PreferredName
   */
  public String getPreferredName()
  {
    return (String)getAttributeInternal(PREFERREDNAME);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for PREFERRED_NAME using the alias name PreferredName
   */
  public void setPreferredName(String value)
  {
    setAttributeInternal(PREFERREDNAME, value);
  }

  /**
   * 
   *  Gets the attribute value for LONG_NAME using the alias name LongName
   */
  public String getLongName()
  {
    return (String)getAttributeInternal(LONGNAME);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for LONG_NAME using the alias name LongName
   */
  public void setLongName(String value)
  {
    setAttributeInternal(LONGNAME, value);
  }

  /**
   * 
   *  Gets the attribute value for PREFERRED_DEFINITION using the alias name PreferredDefinition
   */
  public String getPreferredDefinition()
  {
    return (String)getAttributeInternal(PREFERREDDEFINITION);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for PREFERRED_DEFINITION using the alias name PreferredDefinition
   */
  public void setPreferredDefinition(String value)
  {
    setAttributeInternal(PREFERREDDEFINITION, value);
  }

  /**
   * 
   *  Gets the attribute value for CONTE_IDSEQ using the alias name ConteIdseq
   */
  public String getConteIdseq()
  {
    return (String)getAttributeInternal(CONTEIDSEQ);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for CONTE_IDSEQ using the alias name ConteIdseq
   */
  public void setConteIdseq(String value)
  {
    setAttributeInternal(CONTEIDSEQ, value);
  }

  /**
   * 
   *  Gets the attribute value for VERSION using the alias name Version
   */
  public Number getVersion()
  {
    return (Number)getAttributeInternal(VERSION);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for VERSION using the alias name Version
   */
  public void setVersion(Number value)
  {
    setAttributeInternal(VERSION, value);
  }

  /**
   * 
   *  Gets the attribute value for ASL_NAME using the alias name AslName
   */
  public String getAslName()
  {
    return (String)getAttributeInternal(ASLNAME);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for ASL_NAME using the alias name AslName
   */
  public void setAslName(String value)
  {
    setAttributeInternal(ASLNAME, value);
  }

  /**
   * 
   *  Gets the attribute value for LATEST_VERSION_IND using the alias name LatestVersionInd
   */
  public String getLatestVersionInd()
  {
    return (String)getAttributeInternal(LATESTVERSIONIND);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for LATEST_VERSION_IND using the alias name LatestVersionInd
   */
  public void setLatestVersionInd(String value)
  {
    setAttributeInternal(LATESTVERSIONIND, value);
  }

  /**
   * 
   *  Gets the attribute value for DEFINITION_SOURCE using the alias name DefinitionSource
   */
  public String getDefinitionSource()
  {
    return (String)getAttributeInternal(DEFINITIONSOURCE);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for DEFINITION_SOURCE using the alias name DefinitionSource
   */
  public void setDefinitionSource(String value)
  {
    setAttributeInternal(DEFINITIONSOURCE, value);
  }

  /**
   * 
   *  Gets the attribute value for CON_ID using the alias name ConId
   */
  public Number getConId()
  {
    return (Number)getAttributeInternal(CONID);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for CON_ID using the alias name ConId
   */
  public void setConId(Number value)
  {
    setAttributeInternal(CONID, value);
  }

  /**
   * 
   *  Gets the attribute value for EVS_SOURCE using the alias name EvsSource
   */
  public String getEvsSource()
  {
    return (String)getAttributeInternal(EVSSOURCE);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for EVS_SOURCE using the alias name EvsSource
   */
  public void setEvsSource(String value)
  {
    setAttributeInternal(EVSSOURCE, value);
  }

  /**
   * 
   *  Gets the attribute value for CONDR_IDSEQ using the alias name CondrIdseq
   */
  public String getCondrIdseq()
  {
    return (String)getAttributeInternal(CONDRIDSEQ);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for CONDR_IDSEQ using the alias name CondrIdseq
   */
  public void setCondrIdseq(String value)
  {
    setAttributeInternal(CONDRIDSEQ, value);
  }

  /**
   * 
   *  Gets the attribute value for CC_IDSEQ using the alias name CcIdseq
   */
  public String getCcIdseq()
  {
    return (String)getAttributeInternal(CCIDSEQ);
  }

  /**
   * 
   *  Sets <code>value</code> as attribute value for CC_IDSEQ using the alias name CcIdseq
   */
  public void setCcIdseq(String value)
  {
    setAttributeInternal(CCIDSEQ, value);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case CONIDSEQ:
        return getConIdseq();
      case PREFERREDNAME:
        return getPreferredName();
      case LONGNAME:
        return getLongName();
      case PREFERREDDEFINITION:
        return getPreferredDefinition();
      case CONTEIDSEQ:
        return getConteIdseq();
      case VERSION:
        return getVersion();
      case ASLNAME:
        return getAslName();
      case LATESTVERSIONIND:
        return getLatestVersionInd();
      case DEFINITIONSOURCE:
        return getDefinitionSource();
      case CONID:
        return getConId();
      case EVSSOURCE:
        return getEvsSource();
      case CONDRIDSEQ:
        return getCondrIdseq();
      case CCIDSEQ:
        return getCcIdseq();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case CONIDSEQ:
        setConIdseq((String)value);
        return;
      case PREFERREDNAME:
        setPreferredName((String)value);
        return;
      case LONGNAME:
        setLongName((String)value);
        return;
      case PREFERREDDEFINITION:
        setPreferredDefinition((String)value);
        return;
      case CONTEIDSEQ:
        setConteIdseq((String)value);
        return;
      case VERSION:
        setVersion((Number)value);
        return;
      case ASLNAME:
        setAslName((String)value);
        return;
      case LATESTVERSIONIND:
        setLatestVersionInd((String)value);
        return;
      case DEFINITIONSOURCE:
        setDefinitionSource((String)value);
        return;
      case CONID:
        setConId((Number)value);
        return;
      case EVSSOURCE:
        setEvsSource((String)value);
        return;
      case CONDRIDSEQ:
        setCondrIdseq((String)value);
        return;
      case CCIDSEQ:
        setCcIdseq((String)value);
        return;
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }
}