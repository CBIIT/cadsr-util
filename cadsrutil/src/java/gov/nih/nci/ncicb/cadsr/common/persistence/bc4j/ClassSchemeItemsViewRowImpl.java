/*L
 * Copyright Oracle inc, SAIC-F
 *
 * Distributed under the OSI-approved BSD 3-Clause License.
 * See http://ncip.github.com/cadsr-util/LICENSE.txt for details.
 */

package gov.nih.nci.ncicb.cadsr.common.persistence.bc4j;
import oracle.jbo.server.ViewRowImpl;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.RowIterator;
import oracle.jbo.domain.Date;
//  ---------------------------------------------------------------
//  ---    File generated by Oracle Business Components for Java.
//  ---------------------------------------------------------------

public class ClassSchemeItemsViewRowImpl extends ViewRowImpl 
{


  public static final int CSIIDSEQ = 0;
  public static final int LONGNAME = 1;
  public static final int CSITLNAME = 2;
  public static final int PREFERREDDEFINITION = 3;
  public static final int COMMENTS = 4;
  public static final int DATECREATED = 5;
  public static final int CREATEDBY = 6;
  public static final int DATEMODIFIED = 7;
  public static final int MODIFIEDBY = 8;
  public static final int CSIID = 9;
  public static final int VERSION = 10;
  public static final int CSCSIVIEW = 11;
  /**
   * 
   * This is the default constructor (do not remove)
   */
  public ClassSchemeItemsViewRowImpl()
  {
  }

  /**
   * 
   * Gets ClassSchemeItems entity object.
   */
  public ClassSchemeItemsImpl getClassSchemeItems()
  {
    return (ClassSchemeItemsImpl)getEntity(0);
  }

  /**
   * 
   * Gets the attribute value for CSI_IDSEQ using the alias name CsiIdseq
   */
  public String getCsiIdseq()
  {
    return (String)getAttributeInternal(CSIIDSEQ);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for CSI_IDSEQ using the alias name CsiIdseq
   */
  public void setCsiIdseq(String value)
  {
    setAttributeInternal(CSIIDSEQ, value);
  }

  /**
   * 
   * Gets the attribute value for LONG_NAME using the alias name LONG_NAME
   */
  public String getLongName()
  {
    return (String)getAttributeInternal(LONGNAME);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for LONG_NAME using the alias name LONG_NAME
   */
  public void setLongName(String value)
  {
    setAttributeInternal(LONGNAME, value);
  }

  /**
   * 
   * Gets the attribute value for CSITL_NAME using the alias name CsitlName
   */
  public String getCsitlName()
  {
    return (String)getAttributeInternal(CSITLNAME);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for CSITL_NAME using the alias name CsitlName
   */
  public void setCsitlName(String value)
  {
    setAttributeInternal(CSITLNAME, value);
  }

  /**
   * 
   * Gets the attribute value for PREFERREDDEFINITION using the alias name PREFERREDDEFINITION
   */
  public String getPreferredDefinition()
  {
    return (String)getAttributeInternal(PREFERREDDEFINITION);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for PREFERREDDEFINITION using the alias name PREFERREDDEFINITION
   */
  public void setPreferredDefinition(String value)
  {
    setAttributeInternal(PREFERREDDEFINITION, value);
  }

  /**
   * 
   * Gets the attribute value for COMMENTS using the alias name Comments
   */
  public String getComments()
  {
    return (String)getAttributeInternal(COMMENTS);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for COMMENTS using the alias name Comments
   */
  public void setComments(String value)
  {
    setAttributeInternal(COMMENTS, value);
  }

  /**
   * 
   * Gets the attribute value for DATE_CREATED using the alias name DateCreated
   */
  public Date getDateCreated()
  {
    return (Date)getAttributeInternal(DATECREATED);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for DATE_CREATED using the alias name DateCreated
   */
  public void setDateCreated(Date value)
  {
    setAttributeInternal(DATECREATED, value);
  }

  /**
   * 
   * Gets the attribute value for CREATED_BY using the alias name CreatedBy
   */
  public String getCreatedBy()
  {
    return (String)getAttributeInternal(CREATEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for CREATED_BY using the alias name CreatedBy
   */
  public void setCreatedBy(String value)
  {
    setAttributeInternal(CREATEDBY, value);
  }

  /**
   * 
   * Gets the attribute value for DATE_MODIFIED using the alias name DateModified
   */
  public Date getDateModified()
  {
    return (Date)getAttributeInternal(DATEMODIFIED);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for DATE_MODIFIED using the alias name DateModified
   */
  public void setDateModified(Date value)
  {
    setAttributeInternal(DATEMODIFIED, value);
  }

  /**
   * 
   * Gets the attribute value for MODIFIED_BY using the alias name ModifiedBy
   */
  public String getModifiedBy()
  {
    return (String)getAttributeInternal(MODIFIEDBY);
  }

  /**
   * 
   * Sets <code>value</code> as attribute value for MODIFIED_BY using the alias name ModifiedBy
   */
  public void setModifiedBy(String value)
  {
    setAttributeInternal(MODIFIEDBY, value);
  }
  
  
  /**Gets the attribute value for CsiId, using the alias name CsiId.
   */
  public Number getCsiId() {
      return (Number)getAttributeInternal(CSIID);
  }

  /**Sets <code>value</code> as the attribute value for CsiId.
   */
  public void setCsiId(Number value) {
      setAttributeInternal(CSIID, value);
  }

  /**Gets the attribute value for Version, using the alias name Version.
   */
  public Number getVersion() {
      return (Number)getAttributeInternal(VERSION);
  }

  /**Sets <code>value</code> as the attribute value for Version.
   */
  public void setVersion(Number value) {
      setAttributeInternal(VERSION, value);
  }
  //  Generated method. Do not modify.

  protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case CSIIDSEQ:
        return getCsiIdseq();
      case LONGNAME:
        return getLongName();
      case CSITLNAME:
        return getCsitlName();
      case PREFERREDDEFINITION:
        return getPreferredDefinition();
      case COMMENTS:
        return getComments();
      case DATECREATED:
        return getDateCreated();
      case CREATEDBY:
        return getCreatedBy();
      case DATEMODIFIED:
        return getDateModified();
      case MODIFIEDBY:
        return getModifiedBy();
      case CSIID:
          return getCsiId();
      case VERSION:
          return getVersion();
      case CSCSIVIEW:
        return getCsCsiView();
      default:
        return super.getAttrInvokeAccessor(index, attrDef);
      }
  }
  //  Generated method. Do not modify.

  protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception
  {
    switch (index)
      {
      case CSIIDSEQ:
        setCsiIdseq((String)value);
        return;
      case LONGNAME:
        setLongName((String)value);
        return;
      case CSITLNAME:
        setCsitlName((String)value);
        return;
      case PREFERREDDEFINITION:
        setPreferredDefinition((String)value);
        return;
      case COMMENTS:
        setComments((String)value);
        return;
      case DATECREATED:
        setDateCreated((Date)value);
        return;
      case CREATEDBY:
        setCreatedBy((String)value);
        return;
      case DATEMODIFIED:
        setDateModified((Date)value);
        return;
      case MODIFIEDBY:
        setModifiedBy((String)value);
        return;
      case CSIID:
          setCsiId((Number)value);
          return;
      case VERSION:
          setVersion((Number)value);
          return;    
      default:
        super.setAttrInvokeAccessor(index, value, attrDef);
        return;
      }
  }

  /**
   * 
   * Gets the associated <code>RowIterator</code> using master-detail link CsCsiView
   */
  public RowIterator getCsCsiView() {
    return (RowIterator)getAttributeInternal(CSCSIVIEW);
  }
}